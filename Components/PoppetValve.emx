<?xml version="1.0" encoding="UTF-8"?>
<Document>
 <Icons>
    <Icon size="128" bpp="32" format="png">
<![CDATA[89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda793000000097048597300000ec400000ec401952b0e1b000005fc49444154789ced9d4d482b571480cf512b9606f52928e2424290125269b0d974216fa70805edaa1be9aa5d174aa1e0a6edae20943ede5268a13ba1f5214277366e4a162a226d45cdc6d88d0d684a414c4c9fa78b9a360e7393c94c66eebd73ce07c37bc9dcdcdfef9cb99968442202812f3dba3b20e84504608e08c01c118039220073d80b8088dfe8ee834e90fbdb4044242242ddfdd005fb0cc01d1180392200734400e68800cc1101982302304704608e08c01c1180392200734400e68800cc1101982302304704608e08c01c1180392200734400e68800cc1101b843448f0e00f80100c8d6637878f81e00de728e4b75fc3b05deca12118c8d8dfdad7b8c418e4c26f37df378fa5c9c18595b5b835c2ee772ca7c565757a950280c84557fb95ceecde7f361551f2ac56211d6d7d7ef9b9f934b0073440066dcddddbdd9fc5804600611f5373f1601982302304704608e08c01c1180392200734400e6c446806ab50af97cbe7e7373f312007e0fab9d6c36fbebc6c6c69f954a25ac2622c5edb300aba856ab502814ea5b5b5b3d954ae5c78b8b8bf789e8afb0da3b3c3c9c41c4a5fdfdfdaf72b9dcc8fcfcfcf093274fc26a2e74ac1520ea856f8688b600602b0e22582780ce8577120711ac11c0a4857762b308c60b60f2c23bb151046305b069e19dd824827102d8bcf04e6c10c11801e2b4f04e4c1641bb00715e7827268aa04d0013161e11c71ffe7d9d884ea36ad72411020b50afd7e1fafabaa3d71c1f1f6b8ff88989890fa6a7a7bf2c168b303333f3f3d4d4d4f352a9f445947d7013616e6e6eb8b7b7d7731d4343433030e0ff87a0030bb0bbbb5bdfdcdc84442251f5fa9a72b9fc93ae8547c4f1542af5627676369dcd66874ba5122493c9d1d3d3d34f92c9e47be7e7e7ef46990d001e8b707474f42911795ad1dbdbdb442e971b5f595919f4db7660016ab51a9d9c9c7c47441f06ad2b6c1a51bfb0b0303a3232020000a9540a0000d2e97462727232bdb3b3a3251b00fc2f82d7f288f83493c9bc08d2a6f64d601438a3beafcf7dd8838383b0b4b4a4351b444d6c3e0e56f110f5bf2d2e2ebe9dcbe5948bdfa0a7a707d2e97462797939fdb037f82ca2ae6a21b619c06bd4abe0920d6299013a8d7a151cb241ac3240d0a85711e76c109b0cd0ada85711d76c607d06082bea55c42d1b589d01c28e7a1571ca06566680a8a35e451cb28175194057d4abb03d1b5893014c897a15b666032b32806951afc2c66c60e64c3e607ad4abb0291b189b016c897a15b66403e366d5d6a857617a36302a03d81ef52a4cce0646cc70dca25e8589d9407b06886bd4ab302d1b689b6d2e51afc2946ca02503708b7a15266483c8671e113f0280af2f2f2fa1582c46ddbcc98c02c0e7883844441f47d568e40210d13300781675bb823bda3781825e4400e68800cc1101982302304704608e08c01c1180392200734400e68800cc1101982302304704608e08c01c1180392200734400e68800cc110198230230470460467f7fff2fcd8f45006620e2a36f7577fbbd80d7b6b7b7ef0f0e0e5e7aa9f0ececec95aef44cf0c5dededeab00e0e9efd85e5d5df5d76ab547eb8a44f4a81022be0100ef00c06d07fdf836ae7fe6c57410f169872f3921a23ffe7bbd53008117b207608e08c01c5fbf1c8a882daf1b4484febaa387c6781afd763ef6f21a3fed98402819a09d20823904128088d07934ced92c81331338313192fdd2f5ef0720226c3771cd65ddce3bebf05bce4bbbcde71091822caadbb8dbf5c9edbcdbb97673e797c836816e93e3559420e53a6937085efbd8adbabb3586ae0bd0aeb35e2f15dd28d7aadde6e75bfd5f25995b9baacba1aadf5eeaf732862004120011c97934ce7532d93aca75330bb849d8ed2c13d61842f98e20d33647516c48c36e23acfa030960da42779bc626b3b139546ddc541b342ff74bbcd41f262cbea02faa090db39db0ea8ef456b06a831665b9c6635352b6d7bb8f618dc1d7a781416e833af17af3c84f393fedb67a5feee57cabb6bc5c423aa9bf1b5921b20cd0ee5d41abe78394eba45dbf046da351d6eb383badbf1546fd3c80d7cc12a75bb1ba918f83992302304704608e517b00217a2403304704608e08c01c118039ff00c7ee17be7fef24d40000000049454e44ae426082]]>
   </Icon>
</Icons>
 <Model version="4.5" build="4.5.1.5561">
    <Sidops>
<![CDATA[ExhVV 264 232specifications active 'ExhVV'	specification 'ExhVV' description '<Information>
 <Description>
    <Version>4.5</Version>
<IsMainModel>1</IsMainModel>
    <LibraryPath>Components\PoppetValve.emx</LibraryPath>
  <TimeStamp>2015-11-2 23:50:38</TimeStamp>
<KeepParameterValues>False</KeepParameterValues>
  <AllowLibraryUpdate>True</AllowLibraryUpdate>
  <Configuration>
   <struct>
    <member>
     <name>DocumentationMask</name>
     <value>
      <struct></struct>
     </value>
    </member>
   </struct>
  </Configuration>
 </Description>
</Information>'; type Submodel  ports   power in pTFIn [3,1];   signal in CA;   signal in VONom;   signal in dVONom;   power out pTFOut [3,1];   signal out aOpenEff;   signal out Cd;   signal in areaMultiplier; end; icon bg bottom shadow 11776947  figures   line 224 209 256 209 fill 15132390;   line 224 209 224 257 fill 15132390;   line 304 211 304 255 fill 15132390;   line 272 209 304 209 fill 15132390;   line 264 224 240 240 288 240 264 224 fill 8355711;   line 256 209 256 217 240 225 232 225 232 257 224 257 fill 15132390;   line 272 209 272 217 288 225 296 225 296 257 304 257 304 209 272 209 fill 12632256;   line 256 209 224 209 224 257 232 257 232 225 240 225 256 217 256 209 fill 12632256;   line 264 225 264 193 fill 15132390;   text 'PoppetValve' 264 265 16;  terminals   pTFIn 208 232 fixed;   CA 304 184 fixed;   VONom 224 184 fixed;   dVONom 248 184 fixed;   pTFOut 320 232 fixed;   aOpenEff 320 208 fixed;   Cd 320 184 fixed;   areaMultiplier 280 184 fixed; end; implementation bg  submodels   EffortSensor1 272 319    description '<Description><Version>4.0</Version><Version>4.0</Version><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues>   <LibraryPath>Bond Graph\EffortSensor.emx</LibraryPath>  <TimeStamp>2007-9-27 9:59:27</TimeStamp></Description>';    knot EffortSensor     ports      power knot in p1 [1];      pseudohydraulic knot out p2 [1];      signal knot out effort [1];     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse     figures      ellipse 265.1 313.3 278.9 327.4 fill 16777215;      text 'e' 272.5 317.6;    end;    implementation eqequations	p2.e = p1.e;	p1.f = p2.f;	effort = p1.e;     implementation_end;   EffortSensor2 416 319    description '<Description><Version>4.0</Version><Version>4.0</Version><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues>   <LibraryPath>Bond Graph\EffortSensor.emx</LibraryPath>  <TimeStamp>2007-9-27 9:59:27</TimeStamp></Description>';    knot EffortSensor     ports      pseudohydraulic knot in p1 [1];      pseudohydraulic knot out p2 [1];      signal knot out effort [1];     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse     figures      ellipse 409.1 313.3 422.9 327.4 fill 16777215;      text 'e' 416.5 317.6;    end;    implementation eqequations	p2.e = p1.e;	p1.f = p2.f;	effort = p1.e;     implementation_end;   ExhVVArea 328.1 200.1			specifications active 'Exhaust'				specification 'Exhaust' description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>Components\PoppetValveAreaCd.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-10-20 15:54:56</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type Submodel  ports   signal in lift {m} ;   signal in pIn {Pa} ;   signal in pOut {Pa} ;   signal out aOpen {m2} ; "Open area"   signal out Cd; "Discharge coefficient"   signal out aEff {m2} ; "Effective area of nozzle" end; icon bg bottom  figures   rectangle 287.8 185.1 368.4 215.2 fill 15132390;   text 'VVArea' 328 200 16;  terminals   lift 304 176 fixed;   pIn 328 176 fixed;   pOut 352 176 fixed;   aOpen 304 224 fixed;   Cd 328 224 fixed;   aEff 352 224 fixed; end; implementation eq/* Poppet Valve Area Calculation	This calcuates the opening area, discharge coefficient and effective opening	area for poppet valve.		Input		lift : Valve lift [m]		pIn : Upstream pressure [Pa]		pOut : Downstream pressure [Pa]	Output		aOpen : Valve opening [m2]		Cd : Discharge coefficient		aEff : Effective valve opening [m2]			Version  | Created by     | Place      |  Changes	------------------------------------------------------	1.0      | Kevin K. Yum   | NTNU       | First model	*/constants	real CdCorrCoeffP[3] = [0.5329;-0.2047;0.04292];	real CdCorrCoeffQ[3] = [0.5359;-0.2962;0.06275];	// Discharge coeffcient correction factors	real CdCorrCoeffPr[3] = [-0.006345;0.09503;0.8117];	// Discharge coefficient correction factor		// The fit model was taken from the Sher, E. (1990). Scavenging 	// the two-stroke engine. Progress in Energy and Combustion Science, 	// 16(2), 95-124. parameters	real global DvExh;		 	// Valve Seat diameter	real global betaExh;   	// valve seat angle	real global wExh;      	// valve seat width	real global DpExh;    		// Valve port diameter	real global DsExh; 			// Valve stem diametervariables	real L_Dv, pr;equations	if (lift > 0) then		if (lift < (wExh / (sin(betaExh)*cos(betaExh)))) then			aOpen = pi*(lift)*cos(betaExh)*(DvExh - 2*wExh + lift/2*sin(betaExh*2));		else 			if (lift <= (sqrt((DpExh^2 - DsExh^2)/(4*(DvExh - wExh)) - wExh^2) + wExh*tan(betaExh))) then				aOpen = pi*(DvExh - wExh)*sqrt((lift - wExh*tan(betaExh))^2 + wExh^2);			else				aOpen = 0.25*pi*(DpExh^2 - DsExh^2);			end;		end;				L_Dv = lift/DvExh;		Cd = ((L_Dv*CdCorrCoeffP[1] + CdCorrCoeffP[2])*L_Dv + CdCorrCoeffP[3])	            / (((L_Dv + CdCorrCoeffQ[1])*L_Dv + CdCorrCoeffQ[2])*L_Dv + 	            CdCorrCoeffQ[3]);		if (pIn > pOut) then			pr = pIn/pOut;		else			pr = pOut/pIn;		end;			Cd = Cd*((CdCorrCoeffPr[1]*pr + CdCorrCoeffPr[2])*pr + CdCorrCoeffPr[3]);		aEff = aOpen*Cd;	else		aOpen = 0;		Cd = 0;		aEff = 0;	end;		 implementation_end;specification_end;				specification 'Intake'description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>Components\PoppetValveAreaCd.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-6-22 22:48:36</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type Submodel  ports   signal in lift {m} ;   signal in pIn {Pa} ;   signal in pOut {Pa} ;   signal out aOpen {m2} ; "Open area"   signal out Cd; "Discharge coefficient"   signal out aEff {m2} ; "Effective area of nozzle" end; icon bg bottom  figures   rectangle 287.8 185.1 368.4 215.2 fill 15132390;   text 'VVArea' 328 200 16;  terminals   lift 304 176 fixed;   pIn 328 176 fixed;   pOut 352 176 fixed;   aOpen 304 224 fixed;   Cd 328 224 fixed;   aEff 352 224 fixed; end; implementation eq/* Poppet Valve Area Calculation	This calcuates the opening area, discharge coefficient and effective opening	area for poppet valve.		Input		lift : Valve lift [m]		pIn : Upstream pressure [Pa]		pOut : Downstream pressure [Pa]	Output		aOpen : Valve opening [m2]		Cd : Discharge coefficient		aEff : Effective valve opening [m2]			Version  | Created by     | Place      |  Changes	------------------------------------------------------	1.0      | Kevin K. Yum   | NTNU       | First model	*/constants	real CdCorrCoeffP[3] = [0.5329;-0.2047;0.04292];	real CdCorrCoeffQ[3] = [0.5359;-0.2962;0.06275];	// Discharge coeffcient correction factors	real CdCorrCoeffPr[3] = [-0.006345;0.09503;0.8117];	// Discharge coefficient correction factor		// The fit model was taken from the Sher, E. (1990). Scavenging 	// the two-stroke engine. Progress in Energy and Combustion Science, 	// 16(2), 95-124. parameters	real global DvIntake;		 	// Valve Seat diameter	real global betaIntake;   	// valve seat angle	real global wIntake;      	// valve seat width	real global DpIntake;    		// Valve port diameter	real global DsIntake; 			// Valve stem diametervariables	real L_Dv, pr;equations	if (lift > 0) then		if (lift < (wIntake / (sin(betaIntake)*cos(betaIntake)))) then			aOpen = pi*(lift)*cos(betaIntake)*(DvIntake - 2*wIntake + lift/2*sin(betaIntake*2));		else 			if (lift <= (sqrt((DpIntake^2 - DsIntake^2)/(4*(DvIntake - wIntake)) - wIntake^2) + wIntake*tan(betaIntake))) then				aOpen = pi*(DvIntake - wIntake)*sqrt((lift - wIntake*tan(betaIntake))^2 + wIntake^2);			else				aOpen = 0.25*pi*(DpIntake^2 - DsIntake^2);			end;		end;				L_Dv = lift/DvIntake;		Cd = ((L_Dv*CdCorrCoeffP[1] + CdCorrCoeffP[2])*L_Dv + CdCorrCoeffP[3])	            / (((L_Dv + CdCorrCoeffQ[1])*L_Dv + CdCorrCoeffQ[2])*L_Dv + 	            CdCorrCoeffQ[3]);		if (pIn > pOut) then			pr = pIn/pOut;		else			pr = pOut/pIn;		end;			Cd = Cd*((CdCorrCoeffPr[1]*pr + CdCorrCoeffPr[2])*pr + CdCorrCoeffPr[3]);		aEff = aOpen*Cd;	else		aOpen = 0;		Cd = 0;		aEff = 0;	end;		 implementation_end;specification_end;			end;   ExhVVLift1 304 120			specifications active 'Exhaust'				specification 'Exhaust' description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>Components\ValveLift.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-11-2 23:44:24</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type ExhVVLift  ports   signal out lift;   signal in CA;   signal in CA_start_nom;   signal in dCA_lift_nom; end; icon bg bottom  figures   rectangle 267.9 104 340.1 136 fill 15132390;   text 'VVLift' 304 120 16;  terminals   lift 304 144 fixed;   CA 328 96 fixed;   CA_start_nom 280 96 fixed;   dCA_lift_nom 304 96 fixed; end; implementation eqparameters//	real CA_start_nom = 1.1;//	real dCA_lift_nom = 1;	string global dllToolbox;	string global fnc_interp;	integer global ExhProfNoRow1;	integer global ExhProfNoRow2;	real global ExhVVProfUpX[ExhProfNoRow1];	real global ExhVVProfUpY[ExhProfNoRow1];	real global ExhVVProfDownX[ExhProfNoRow2];	real global ExhVVProfDownY[ExhProfNoRow2];	real global ExhLift_max;	integer global nStroke;	real global ExhCA_start_ref; //Reference start CA for start of valve lift	real global ExhdCA_lift_up;	 //Lift up time (should not be changed unless file is changed	real global ExhdCA_lift_down; //Lift down time (should not be changed unless file is changed	real global ExhdCA_lift_top_ref; //Reference duration for lift upvariables	real inarr1[2*ExhProfNoRow1+2];							//length should be 2 * no. of row of profile table + 2	real inarr2[2*ExhProfNoRow2+2];							//length should be 2 * no. of row of profile table + 2	real CA_start, dCA_lift, dCA_total, CA_VV;	real phi;initialequations	inarr1[1] = ExhProfNoRow1;	inarr1[2:ExhProfNoRow1+1] = ExhVVProfUpX; 	inarr1[ExhProfNoRow1+2:ExhProfNoRow1*2+1] = ExhVVProfUpY;			inarr2[1] = ExhProfNoRow2;	inarr2[2:ExhProfNoRow2+1] = ExhVVProfDownX; 	inarr2[ExhProfNoRow2+2:ExhProfNoRow2*2+1] = ExhVVProfDownY;			equations	CA_start = CA_start_nom*ExhCA_start_ref;	dCA_lift = dCA_lift_nom*ExhdCA_lift_top_ref;		dCA_total = ExhdCA_lift_up + dCA_lift + ExhdCA_lift_down;	phi = CA*180/pi mod (nStroke*180);	if phi > CA_start and phi < CA_start + dCA_total then		CA_VV = phi - CA_start;		if CA_VV <= ExhdCA_lift_up then			inarr1[ExhProfNoRow1*2+2] = CA_VV;			lift = dll(dllToolbox, fnc_interp, inarr1);		else 	if CA_VV <= ExhdCA_lift_up + dCA_lift then					lift = 1;			  	else 	if CA_VV <= ExhdCA_lift_up + dCA_lift + ExhdCA_lift_down then							CA_VV = phi - (CA_start + ExhdCA_lift_up + dCA_lift);							inarr2[ExhProfNoRow2*2+2] = CA_VV;							lift = dll(dllToolbox, fnc_interp,inarr2);					 	else 					 		lift = 0;							end;				end;		end;	else		lift = 0;		end;				lift = ExhLift_max*lift; implementation_end;specification_end;				specification 'Intake'description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>Components\ValveLift.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-10-20 15:16:35</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type ExhVVLift  ports   signal out lift;   signal in CA;   signal in CA_start_nom;   signal in dCA_lift_nom; end; icon bg bottom  figures   rectangle 763.9 96 836.1 128 fill 15132390;   text 'VVLift' 800 112 16;  terminals   lift 800 136 fixed;   CA 824 88 fixed;   CA_start_nom 776 88 fixed;   dCA_lift_nom 800 88 fixed; end; implementation eqparameters//	real CA_start_nom = 1.1;//	real dCA_lift_nom = 1;	string global dllToolbox = 'dllTool20Sim.dll';	string global fnc_interp = 'interpolate';	integer global InProfNoRow1;	integer global InProfNoRow2;	real global InVVProfUpX[InProfNoRow1]; 	real global InVVProfUpY[InProfNoRow1];	real global InVVProfDownX[InProfNoRow2];	real global InVVProfDownY[InProfNoRow2];	real global InLift_max = 1;	real global nstorke = 2;	real hidden global InCA_start_ref = 107; //Reference start CA for start of valve lift	real hidden global IndCA_lift_up = 37.7;	 //Lift up time (should not be changed unless file is changed	real hidden global IndCA_lift_down = 52; //Lift down time (should not be changed unless file is changed	real hidden global IndCA_lift_top_ref = 60; //Reference duration for lift upvariables	real inarr1[InProfNoRow1*2+2];							//length should be 2 * no. of row of profile table + 1	real inarr2[InProfNoRow2*2+2];							//length should be 2 * no. of row of profile table + 1	real CA_start, dCA_lift, dCA_total, CA_VV;	real phi;initialequations	inarr1[1] = InProfNoRow1;	inarr1[2:InProfNoRow1+1] = InVVProfUpX; 	inarr1[InProfNoRow1+2:InProfNoRow1*2+1] = InVVProfUpY;			inarr2[1] = InProfNoRow2;	inarr2[2:InProfNoRow2+1] = InVVProfUpX; 	inarr2[InProfNoRow2+2:InProfNoRow2+1] = InVVProfUpY;			equations	CA_start = CA_start_nom*InCA_start_ref;	dCA_lift = dCA_lift_nom*IndCA_lift_top_ref;		dCA_total = IndCA_lift_up + dCA_lift + IndCA_lift_down;	phi = CA*180/pi mod (nstorke*180);	if phi > CA_start and phi < CA_start + dCA_total then		CA_VV = phi - CA_start;		if CA_VV <= IndCA_lift_up then			inarr1[InProfNoRow1*2+2] = CA_VV;			lift = dll(dllToolbox, fnc_interp, inarr1);		else 	if CA_VV <= IndCA_lift_up + dCA_lift then					lift = 1;			  	else 	if CA_VV <= IndCA_lift_up + dCA_lift + IndCA_lift_down then							CA_VV = phi - (CA_start + IndCA_lift_up + dCA_lift);							inarr2[InProfNoRow2*2+2] = CA_VV;							lift = dll(dllToolbox, fnc_interp,inarr2);					 	else 					 		lift = 0;							end;				end;		end;	else		lift = 0;		end;				lift = InLift_max*lift; implementation_end;specification_end;			end;   MultiplyDivide1 352 248    description '<Description><Version>4.0</Version><Version>4.0</Version><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues>   <LibraryPath>Signal\Block Diagram\MultiplyDivide.emx</LibraryPath>  <TimeStamp>2007-9-27 10:14:59</TimeStamp></Description>';    knot MultiplyDivide     ports      signal knot duplicatable in multiply [1];      signal knot duplicatable in divide [1];      signal knot out output [1];    end;    icon bg ellipse     figures      ellipse 344 240 360 256 fill 16777215;    end;    implementation eqequations	output = mul (collect (multiply)) ./ mul (collect (divide));     implementation_end;   plug pTFOut 504 336;   plug aOpenEff 520.1 280;   plug areaMultiplier 448 32;   plug pTFIn 200 336;   plug dVONom 304 56;   plug VONom 280.1 32;   plug CA 327.8 69.9;   plug Cd 328 264;   PowerDemux 241.5 336			specifications active 'inputs_3'				specification 'default'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-10-5 22:44:58</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power in input [2,1];   power out output2;  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input; end; icon bg bottom  figures   line 128 64 128 96 width 2;   rectangle 124 64 132 96 color -1;   text '2' 133 91 color 8421504 8;  terminals   output1 128 72 fixed;   input 128 80 fixed;   output2 128 88 fixed; end; implementation eqequations	input.e = [output1.e; output2.e];	input.f = [output1.f; output2.f];implementation_end;specification_end;				specification 'inputs_1'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power in input;   power out output;  restrictions   causality constraint not_equal output input; end; icon bg bottom  figures   line 128 64 128 80 width 2;   rectangle 124 64 132 80 color -1;   text '1' 133 82 color 8421504 8;  terminals   input 128 72 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = output.e;	input.f = output.f;implementation_end;specification_end;				specification 'inputs_2'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power in input [2,1];   power out output2;  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input; end; icon bg bottom  figures   line 128 56 128 88 width 2;   rectangle 124 56 132 88 color -1;   text '2' 133 83 color 8421504 8;  terminals   output1 128 64 fixed;   input 128 72 fixed;   output2 128 80 fixed; end; implementation eqequations	input.e = [output1.e; output2.e];	input.f = [output1.f; output2.f];implementation_end;specification_end;				specification 'inputs_3' description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power in input [3,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input; end; icon bg bottom  figures   line 240 312 240 360 width 2;   rectangle 235 320 243 352 color -1;   text '3' 244 346 color 8421504 8;  terminals   output1 240 320 fixed;   output2 240 336 fixed;   output3 240 352 fixed;   input 232 336 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e];	input.f = [output1.f; output2.f; output3.f];implementation_end;specification_end;				specification 'inputs_4'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power in input [4,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input; end; icon bg bottom  figures   line 128 48 128 96 width 2;   rectangle 124 48 132 96 color -1;   text '4' 133 83 color 8421504 8;  terminals   output1 128 56 fixed;   output2 128 64 fixed;   output3 128 80 fixed;   output4 128 88 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e];	input.f = [output1.f; output2.f; output3.f; output4.f];implementation_end;specification_end;				specification 'inputs_5'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power in input [5,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;end; icon bg bottom  figures   line 128 48 128 96 width 2;   rectangle 124 48 132 96 color -1;   text '5' 133 83 color 8421504 8;  terminals   output1 128 56 fixed;   output2 128 64 fixed;   output3 128 72 fixed;   output4 128 80 fixed;   output5 128 88 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e];	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f];implementation_end;specification_end;				specification 'inputs_6'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power out output6;   power in input [6,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;   causality constraint not_equal output6 input; end; icon bg bottom  figures   line 128 40 128 104 width 2;   rectangle 124 40 132 104 color -1;   text '6' 133 83 color 8421504 8;  terminals   output1 128 48 fixed;   output2 128 56 fixed;   output3 128 64 fixed;   output4 128 80 fixed;   output5 128 88 fixed;   output6 128 96 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e; output6.e];	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f; output6.f];implementation_end;specification_end;				specification 'inputs_7'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power out output6;   power out output7;   power in input [7,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;   causality constraint not_equal output6 input;   causality constraint not_equal output7 input; end; icon bg bottom  figures   line 128 40 128 104 width 2;   rectangle 124 40 132 104 color -1;   text '7' 133 83 color 8421504 8;  terminals   output1 128 48 fixed;   output2 128 56 fixed;   output3 128 64 fixed;   output4 128 72 fixed;   output5 128 80 fixed;   output6 128 88 fixed;   output7 128 96 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e; output6.e; output7.e];	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f; output6.f; output7.f];implementation_end;specification_end;				specification 'inputs_8'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power out output6;   power out output7;   power out output8;   power in input [8,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;   causality constraint not_equal output6 input;   causality constraint not_equal output7 input;   causality constraint not_equal output8 input; end; icon bg bottom  figures   line 128 32 128 112 width 2;   rectangle 124 32 132 112 color -1;   text '8' 133 83 color 8421504 8;  terminals   output1 128 40 fixed;   output2 128 48 fixed;   output3 128 56 fixed;   output4 128 64 fixed;   output5 128 80 fixed;   output6 128 88 fixed;   output7 128 96 fixed;   output8 128 104 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e; output6.e; output7.e; output8.e];	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f; output6.f; output7.f; output8.f];implementation_end;specification_end;				specification 'inputs_9'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power out output6;   power out output7;   power out output8;   power out output9;   power in input [9,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;   causality constraint not_equal output6 input;   causality constraint not_equal output7 input;   causality constraint not_equal output8 input;   causality constraint not_equal output9 input; end; icon bg bottom  figures   line 128 32 128 112 width 2;   text '9' 132 83 color 8421504 8;  terminals   output1 128 40 fixed;   output2 128 48 fixed;   output3 128 56 fixed;   output4 128 64 fixed;   output5 128 72 fixed;   output6 128 80 fixed;   output7 128 88 fixed;   output8 128 96 fixed;   output9 128 104 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e; output6.e; output7.e; output8.e; output9.e];implementation_end;	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f; output6.f; output7.f; output8.f; output9.f];specification_end;			end;   PowerMux 449.5 336			specifications active 'inputs_3'				specification 'default'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-10-5 22:44:58</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power out output [2,1];   power in input2;  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output; end; icon bg bottom  figures   line 128 64 128 96 width 2;   rectangle 124 64 132 96 color -1;   text '2' 133 91 color 8421504 8;  terminals   input1 128 72 fixed;   output 128 80 fixed;   input2 128 88 fixed; end; implementation eqequations	output.e = [input1.e; input2.e];	output.f = [input1.f; input2.f];implementation_end;specification_end;				specification 'inputs_1'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input;   power out output;  restrictions   causality constraint not_equal input output; end; icon bg bottom  figures   line 128 64 128 80 width 2;   rectangle 124 64 132 80 color -1;   text '1' 133 82 color 8421504 8;  terminals   input 128 72 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = input.e;	output.f = input.f;implementation_end;specification_end;				specification 'inputs_2'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power out output [2,1];   power in input2;  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output; end; icon bg bottom  figures   line 128 56 128 88 width 2;   rectangle 124 56 132 88 color -1;   text '2' 133 83 color 8421504 8;  terminals   input1 128 64 fixed;   output 128 72 fixed;   input2 128 80 fixed; end; implementation eqequations	output.e = [input1.e; input2.e];	output.f = [input1.f; input2.f];implementation_end;specification_end;				specification 'inputs_3' description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power out output [3,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output; end; icon bg bottom  figures   line 448 312 448 360 width 2;   rectangle 443 312 451 344 color -1;   text '3' 452 338 color 8421504 8;  terminals   input1 448 320 fixed;   input2 448 336 fixed;   input3 448 352 fixed;   output 456 336 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e];	output.f = [input1.f; input2.f; input3.f];implementation_end;specification_end;				specification 'inputs_4'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power out output [4,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output; end; icon bg bottom  figures   line 128 48 128 96 width 2;   rectangle 124 48 132 96 color -1;   text '4' 133 83 color 8421504 8;  terminals   input1 128 56 fixed;   input2 128 64 fixed;   input3 128 80 fixed;   input4 128 88 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e];	output.f = [input1.f; input2.f; input3.f; input4.f];implementation_end;specification_end;				specification 'inputs_5'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power out output [5,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output; end; icon bg bottom  figures   line 128 48 128 96 width 2;   rectangle 124 48 132 96 color -1;   text '5' 133 83 color 8421504 8;  terminals   input1 128 56 fixed;   input2 128 64 fixed;   input3 128 72 fixed;   input4 128 80 fixed;   input5 128 88 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e];	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f];implementation_end;specification_end;				specification 'inputs_6'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power in input6;   power out output [6,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output;   causality constraint not_equal input6 output; end; icon bg bottom  figures   line 128 40 128 104 width 2;   rectangle 124 40 132 104 color -1;   text '6' 133 83 color 8421504 8;  terminals   input1 128 48 fixed;   input2 128 56 fixed;   input3 128 64 fixed;   input4 128 80 fixed;   input5 128 88 fixed;   input6 128 96 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e; input6.e];	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f; input6.f];implementation_end;specification_end;				specification 'inputs_7'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power in input6;   power in input7;   power out output [7,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output;   causality constraint not_equal input6 output;   causality constraint not_equal input7 output; end; icon bg bottom  figures   line 128 40 128 104 width 2;   rectangle 124 40 132 104 color -1;   text '7' 133 83 color 8421504 8;  terminals   input1 128 48 fixed;   input2 128 56 fixed;   input3 128 64 fixed;   input4 128 72 fixed;   input5 128 80 fixed;   input6 128 88 fixed;   input7 128 96 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e; input6.e; input7.e];	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f; input6.f; input7.f];implementation_end;specification_end;				specification 'inputs_8'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power in input6;   power in input7;   power in input8;   power out output [8,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output;   causality constraint not_equal input6 output;   causality constraint not_equal input7 output;   causality constraint not_equal input8 output; end; icon bg bottom  figures   line 128 32 128 112 width 2;   rectangle 124 32 132 112 color -1;   text '8' 133 83 color 8421504 8;  terminals   input1 128 40 fixed;   input2 128 48 fixed;   input3 128 56 fixed;   input4 128 64 fixed;   input5 128 80 fixed;   input6 128 88 fixed;   input7 128 96 fixed;   input8 128 104 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e; input6.e; input7.e; input8.e];	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f; input6.f; input7.f; input8.f];implementation_end;specification_end;				specification 'inputs_9'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power in input6;   power in input7;   power in input8;   power in input9;   power out output [9,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output;   causality constraint not_equal input6 output;   causality constraint not_equal input7 output;   causality constraint not_equal input8 output;   causality constraint not_equal input9 output; end; icon bg bottom  figures   line 128 32 128 112 width 2;   text '9' 132 83 color 8421504 8;  terminals   input1 128 40 fixed;   input2 128 48 fixed;   input3 128 56 fixed;   input4 128 64 fixed;   input5 128 72 fixed;   input6 128 80 fixed;   input7 128 88 fixed;   input8 128 96 fixed;   input9 128 104 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e; input6.e; input7.e; input8.e; input9.e];implementation_end;	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f; input6.f; input7.f; input8.f; input9.f];specification_end;			end;   Splitter1 352 280    description '<Description><Version>4.0</Version>   <LibraryPath>Signal\Block Diagram\Splitter.emx</LibraryPath>  <TimeStamp>2008-01-17 11:28:29</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues></Description>';    knot Splitter     ports      signal knot duplicatable out output [1];      signal knot in input [1];    end;    icon bg ellipse     figures      ellipse 348.8 276.8 355.2 283.2 color -1 fill 0;      ellipse 347.7 275.7 356.3 284.3 color -1;     terminals      input 352 280 fixed;    end;    implementation eqequations    collect (output) = input;implementation_end;   Submodel2 352 359.5    description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>FlowRestriction\IdealNozzleCompGas.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-6-22 16:30:00</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate> </Description></Information>';    type Submodel     ports      signal in Aeff; "Effective area of nozzle (m2)"      pseudohydraulic in ppIn;      pseudothermalh in pTIn;      power in pFIn;      pseudohydraulic out ppOut;      pseudothermalh out pTOut;      power out pFOut;     restrictions      causality fixed in ppOut;      causality fixed in pFOut;      causality fixed in ppIn;      causality fixed in pTIn;      causality fixed in pFIn;    end;    icon bg bottom     figures      text 'R' 352 336 53 bold;      text 'IdealNozzle
CompFlow' 352 376 16;     terminals      Aeff 352 304 fixed;      ppIn 320 320 fixed;      pTIn 320 336 fixed;      pFIn 320 352 fixed;      ppOut 384 320 fixed;      pTOut 384 336 fixed;      pFOut 384 352 fixed;    end;    implementation eq/* Ideal Nozzle ModelUses ideal nozzle equation for compressible flows assuming isentropic process. Flow restriction field. No states.Input   - Effective area of nozzle (Aeff)  - p,T,F in  - p,T,F outOutput  - dm, dE, dmb in  - dm, dE, dmb out*/parameters 	real global fs;	string global dll_ICE;	string global dll_fcn_idealNozzle;variables	real pIn, TIn, FIn, pOut;	real dm, dE, dmb;	real aa, d, pr;	real	inArrFlow[7];	real outArrFlow[3];equations  // start typing here 	aa = ppIn.e / ppOut.e;	if (aa > 1) then		pIn	= ppIn.e; TIn = pTIn.e; FIn = pFIn.e; d	= 1; 	pr = aa;		pOut = ppOut.e;	else		pIn	= ppOut.e; TIn=pTOut.e; FIn= pFOut.e;	d	= -1; pr	= 1.0/aa;		pOut = ppIn.e;	end;		// Calculate thermodynamic properties from (T,P,x)	inArrFlow = [1;Aeff;pIn;pOut;TIn;FIn;fs];	outArrFlow = dll(dll_ICE,dll_fcn_idealNozzle, inArrFlow);			dm = outArrFlow[1]*d;	dE = outArrFlow[2]*d;		dmb = outArrFlow[3]*d;	ppIn.dm = dm;	ppOut.dm  = dm;	pTIn.dH = dE;	pTOut.dH = dE;	pFIn.f = dmb;	pFOut.f = dmb;implementation_end;  end;  connections   areaMultiplier -> MultiplyDivide1\multiply 448 248;   CA -> ExhVVLift1\CA;   dVONom -> ExhVVLift1\dCA_lift_nom;   EffortSensor1\effort -> ExhVVArea\pIn 272 160 328 160;   EffortSensor1\p2 => Submodel2\ppIn;   EffortSensor2\effort -> ExhVVArea\pOut 416 160 352 160;   EffortSensor2\p2 => PowerMux\input1;   ExhVVArea\aEff -> MultiplyDivide1\multiply;   ExhVVArea\Cd -> Cd;   ExhVVLift1\lift -> ExhVVArea\lift;   MultiplyDivide1\output -> Splitter1\input;   PowerDemux\output1 => EffortSensor1\p1;   PowerDemux\output2 => Submodel2\pTIn;   PowerDemux\output3 => Submodel2\pFIn;   PowerMux\output => pTFOut;   pTFIn => PowerDemux\input;   Splitter1\output -> aOpenEff;   Splitter1\output -> Submodel2\Aeff;   Submodel2\pFOut => PowerMux\input3;   Submodel2\ppOut => EffortSensor2\p1;   Submodel2\pTOut => PowerMux\input2;   VONom -> ExhVVLift1\CA_start_nom;  end;  figures   text 'Global parameters
      real global lift_max;     // Maximum lift of the vavle
      real global nstorke;     // number of stroke
      real hidden global CA_start_ref;        //Reference start CA for start of valve lift
      real hidden global dCA_lift_up;	//Lift up time (should not be changed unless file is changed
      real hidden global dCA_lift_down;     //Lift down time (should not be changed unless file is changed
      real hidden global dCA_lift_top_ref;   //Reference duration for lift up
      real global Dv;		 	// Valve Seat diameter
      real global beta;   	// valve seat angle
      real global w;      	// valve seat width
      real global Dp;    		// Valve port diameter
      real global Ds; 			// Valve stem diameter
      
' 288 504 16; implementation_end;specification_end;	specification 'IntakeVV' description '<Information> <Description>    <Version>4.5</Version><IsMainModel>1</IsMainModel>    <LibraryPath>Components\PoppetValve.emx</LibraryPath>  <TimeStamp>2015-10-20 15:58:52</TimeStamp><KeepParameterValues>False</KeepParameterValues>  <AllowLibraryUpdate>True</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type Submodel  ports   power in pTFIn [3,1];   signal in CA;   signal in VONom;   signal in dVONom;   power out pTFOut [3,1];   signal out aOpenEff;   signal out Cd;   signal in areaMultiplier; end; icon bg bottom shadow 11776947  figures   line 224 209 256 209 fill 15132390;   line 224 209 224 257 fill 15132390;   line 304 211 304 255 fill 15132390;   line 272 209 304 209 fill 15132390;   line 264 224 240 240 288 240 264 224 fill 8355711;   line 256 209 256 217 240 225 232 225 232 257 224 257 fill 15132390;   line 272 209 272 217 288 225 296 225 296 257 304 257 304 209 272 209 fill 12632256;   line 256 209 224 209 224 257 232 257 232 225 240 225 256 217 256 209 fill 12632256;   line 264 225 264 193 fill 15132390;   text 'PoppetValve' 264 265 16;  terminals   pTFIn 208 232 fixed;   CA 304 184 fixed;   VONom 224 184 fixed;   dVONom 248 184 fixed;   pTFOut 320 232 fixed;   aOpenEff 320 208 fixed;   Cd 320 184 fixed;   areaMultiplier 280 184 fixed; end; implementation bg  submodels   EffortSensor1 272 320    description '<Description><Version>4.0</Version><Version>4.0</Version><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues>   <LibraryPath>Bond Graph\EffortSensor.emx</LibraryPath>  <TimeStamp>2007-9-27 9:59:27</TimeStamp></Description>';    knot EffortSensor     ports      power knot in p1 [1];      pseudohydraulic knot out p2 [1];      signal knot out effort [1];     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse     figures      ellipse 265.1 313.3 278.9 327.4 fill 16777215;      text 'e' 272.5 317.6;    end;    implementation eqequations	p2.e = p1.e;	p1.f = p2.f;	effort = p1.e;     implementation_end;   EffortSensor2 416 320    description '<Description><Version>4.0</Version><Version>4.0</Version><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues>   <LibraryPath>Bond Graph\EffortSensor.emx</LibraryPath>  <TimeStamp>2007-9-27 9:59:27</TimeStamp></Description>';    knot EffortSensor     ports      pseudohydraulic knot in p1 [1];      pseudohydraulic knot out p2 [1];      signal knot out effort [1];     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse     figures      ellipse 409.1 313.3 422.9 327.4 fill 16777215;      text 'e' 416.5 317.6;    end;    implementation eqequations	p2.e = p1.e;	p1.f = p2.f;	effort = p1.e;     implementation_end;   ExhVVLift1 304 112			specifications active 'Intake'				specification 'Exhaust' description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>Components\ValveLift.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-11-2 23:44:24</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type ExhVVLift  ports   signal out lift;   signal in CA;   signal in CA_start_nom;   signal in dCA_lift_nom; end; icon bg bottom  figures   rectangle 763.9 96 836.1 128 fill 15132390;   text 'VVLift' 800 112 16;  terminals   lift 800 136 fixed;   CA 824 88 fixed;   CA_start_nom 776 88 fixed;   dCA_lift_nom 800 88 fixed; end; implementation eqparameters//	real CA_start_nom = 1.1;//	real dCA_lift_nom = 1;	string global dllToolbox;	string global fnc_interp;	integer global ExhProfNoRow1;	integer global ExhProfNoRow2;	real global ExhVVProfUpX[ExhProfNoRow1];	real global ExhVVProfUpY[ExhProfNoRow1];	real global ExhVVProfDownX[ExhProfNoRow2];	real global ExhVVProfDownY[ExhProfNoRow2];	real global ExhLift_max;	integer global nStroke;	real global ExhCA_start_ref; //Reference start CA for start of valve lift	real global ExhdCA_lift_up;	 //Lift up time (should not be changed unless file is changed	real global ExhdCA_lift_down; //Lift down time (should not be changed unless file is changed	real global ExhdCA_lift_top_ref; //Reference duration for lift upvariables	real inarr1[2*ExhProfNoRow1+2];							//length should be 2 * no. of row of profile table + 2	real inarr2[2*ExhProfNoRow2+2];							//length should be 2 * no. of row of profile table + 2	real CA_start, dCA_lift, dCA_total, CA_VV;	real phi;initialequations	inarr1[1] = ExhProfNoRow1;	inarr1[2:ExhProfNoRow1+1] = ExhVVProfUpX; 	inarr1[ExhProfNoRow1+2:ExhProfNoRow1*2+1] = ExhVVProfUpY;			inarr2[1] = ExhProfNoRow2;	inarr2[2:ExhProfNoRow2+1] = ExhVVProfDownX; 	inarr2[ExhProfNoRow2+2:ExhProfNoRow2*2+1] = ExhVVProfDownY;			equations	CA_start = CA_start_nom*ExhCA_start_ref;	dCA_lift = dCA_lift_nom*ExhdCA_lift_top_ref;		dCA_total = ExhdCA_lift_up + dCA_lift + ExhdCA_lift_down;	phi = CA*180/pi mod (nStroke*180);	if phi > CA_start and phi < CA_start + dCA_total then		CA_VV = phi - CA_start;		if CA_VV <= ExhdCA_lift_up then			inarr1[ExhProfNoRow1*2+2] = CA_VV;			lift = dll(dllToolbox, fnc_interp, inarr1);		else 	if CA_VV <= ExhdCA_lift_up + dCA_lift then					lift = 1;			  	else 	if CA_VV <= ExhdCA_lift_up + dCA_lift + ExhdCA_lift_down then							CA_VV = phi - (CA_start + ExhdCA_lift_up + dCA_lift);							inarr2[ExhProfNoRow2*2+2] = CA_VV;							lift = dll(dllToolbox, fnc_interp,inarr2);					 	else 					 		lift = 0;							end;				end;		end;	else		lift = 0;		end;				lift = ExhLift_max*lift; implementation_end;specification_end;				specification 'Intake' description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>Components\ValveLift.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-10-20 15:16:35</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type ExhVVLift  ports   signal out lift;   signal in CA;   signal in CA_start_nom;   signal in dCA_lift_nom; end; icon bg bottom  figures   rectangle 267.9 96 340.1 128 fill 15132390;   text 'VVLift' 304 112 16;  terminals   lift 304 136 fixed;   CA 328 88 fixed;   CA_start_nom 280 88 fixed;   dCA_lift_nom 304 88 fixed; end; implementation eqparameters//	real CA_start_nom = 1.1;//	real dCA_lift_nom = 1;	string global dllToolbox = 'dllTool20Sim.dll';	string global fnc_interp = 'interpolate';	integer global InProfNoRow1;	integer global InProfNoRow2;	real global InVVProfUpX[InProfNoRow1]; 	real global InVVProfUpY[InProfNoRow1];	real global InVVProfDownX[InProfNoRow2];	real global InVVProfDownY[InProfNoRow2];	real global InLift_max = 1;	real global nstorke = 2;	real hidden global InCA_start_ref = 107; //Reference start CA for start of valve lift	real hidden global IndCA_lift_up = 37.7;	 //Lift up time (should not be changed unless file is changed	real hidden global IndCA_lift_down = 52; //Lift down time (should not be changed unless file is changed	real hidden global IndCA_lift_top_ref = 60; //Reference duration for lift upvariables	real inarr1[InProfNoRow1*2+2];							//length should be 2 * no. of row of profile table + 1	real inarr2[InProfNoRow2*2+2];							//length should be 2 * no. of row of profile table + 1	real CA_start, dCA_lift, dCA_total, CA_VV;	real phi;initialequations	inarr1[1] = InProfNoRow1;	inarr1[2:InProfNoRow1+1] = InVVProfUpX; 	inarr1[InProfNoRow1+2:InProfNoRow1*2+1] = InVVProfUpY;			inarr2[1] = InProfNoRow2;	inarr2[2:InProfNoRow2+1] = InVVProfUpX; 	inarr2[InProfNoRow2+2:InProfNoRow2+1] = InVVProfUpY;			equations	CA_start = CA_start_nom*InCA_start_ref;	dCA_lift = dCA_lift_nom*IndCA_lift_top_ref;		dCA_total = IndCA_lift_up + dCA_lift + IndCA_lift_down;	phi = CA*180/pi mod (nstorke*180);	if phi > CA_start and phi < CA_start + dCA_total then		CA_VV = phi - CA_start;		if CA_VV <= IndCA_lift_up then			inarr1[InProfNoRow1*2+2] = CA_VV;			lift = dll(dllToolbox, fnc_interp, inarr1);		else 	if CA_VV <= IndCA_lift_up + dCA_lift then					lift = 1;			  	else 	if CA_VV <= IndCA_lift_up + dCA_lift + IndCA_lift_down then							CA_VV = phi - (CA_start + IndCA_lift_up + dCA_lift);							inarr2[InProfNoRow2*2+2] = CA_VV;							lift = dll(dllToolbox, fnc_interp,inarr2);					 	else 					 		lift = 0;							end;				end;		end;	else		lift = 0;		end;				lift = InLift_max*lift; implementation_end;specification_end;			end;   IntakeVVArea 328.1 200.1			specifications active 'Intake'				specification 'Exhaust'description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>Components\PoppetValveAreaCd.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-10-20 15:54:56</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type Submodel  ports   signal in lift {m} ;   signal in pIn {Pa} ;   signal in pOut {Pa} ;   signal out aOpen {m2} ; "Open area"   signal out Cd; "Discharge coefficient"   signal out aEff {m2} ; "Effective area of nozzle" end; icon bg bottom  figures   rectangle 287.8 185.1 368.4 215.2 fill 15132390;   text 'VVArea' 328 200 16;  terminals   lift 304 176 fixed;   pIn 328 176 fixed;   pOut 352 176 fixed;   aOpen 304 224 fixed;   Cd 328 224 fixed;   aEff 352 224 fixed; end; implementation eq/* Poppet Valve Area Calculation	This calcuates the opening area, discharge coefficient and effective opening	area for poppet valve.		Input		lift : Valve lift [m]		pIn : Upstream pressure [Pa]		pOut : Downstream pressure [Pa]	Output		aOpen : Valve opening [m2]		Cd : Discharge coefficient		aEff : Effective valve opening [m2]			Version  | Created by     | Place      |  Changes	------------------------------------------------------	1.0      | Kevin K. Yum   | NTNU       | First model	*/constants	real CdCorrCoeffP[3] = [0.5329;-0.2047;0.04292];	real CdCorrCoeffQ[3] = [0.5359;-0.2962;0.06275];	// Discharge coeffcient correction factors	real CdCorrCoeffPr[3] = [-0.006345;0.09503;0.8117];	// Discharge coefficient correction factor		// The fit model was taken from the Sher, E. (1990). Scavenging 	// the two-stroke engine. Progress in Energy and Combustion Science, 	// 16(2), 95-124. parameters	real global DvExh;		 	// Valve Seat diameter	real global betaExh;   	// valve seat angle	real global wExh;      	// valve seat width	real global DpExh;    		// Valve port diameter	real global DsExh; 			// Valve stem diametervariables	real L_Dv, pr;equations	if (lift > 0) then		if (lift < (wExh / (sin(betaExh)*cos(betaExh)))) then			aOpen = pi*(lift)*cos(betaExh)*(DvExh - 2*wExh + lift/2*sin(betaExh*2));		else 			if (lift <= (sqrt((DpExh^2 - DsExh^2)/(4*(DvExh - wExh)) - wExh^2) + wExh*tan(betaExh))) then				aOpen = pi*(DvExh - wExh)*sqrt((lift - wExh*tan(betaExh))^2 + wExh^2);			else				aOpen = 0.25*pi*(DpExh^2 - DsExh^2);			end;		end;				L_Dv = lift/DvExh;		Cd = ((L_Dv*CdCorrCoeffP[1] + CdCorrCoeffP[2])*L_Dv + CdCorrCoeffP[3])	            / (((L_Dv + CdCorrCoeffQ[1])*L_Dv + CdCorrCoeffQ[2])*L_Dv + 	            CdCorrCoeffQ[3]);		if (pIn > pOut) then			pr = pIn/pOut;		else			pr = pOut/pIn;		end;			Cd = Cd*((CdCorrCoeffPr[1]*pr + CdCorrCoeffPr[2])*pr + CdCorrCoeffPr[3]);		aEff = aOpen*Cd;	else		aOpen = 0;		Cd = 0;		aEff = 0;	end;		 implementation_end;specification_end;				specification 'Intake' description '<Information><Description><Version>4.5</Version><LibraryPath>Components\PoppetValveAreaCd.emx</LibraryPath><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues><TimeStamp>2015-6-22 22:48:36</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate><Configuration><struct><member><name>DocumentationMask</name><value><struct></struct></value></member></struct></Configuration></Description></Information>'; type Submodel  ports   signal in lift {m} ;   signal in pIn {Pa} ;   signal in pOut {Pa} ;   signal out aOpen {m2} ; "Open area"   signal out Cd; "Discharge coefficient"   signal out aEff {m2} ; "Effective area of nozzle" end; icon bg bottom  figures   rectangle 287.8 185.1 368.4 215.2 fill 15132390;   text 'VVArea' 328 200 16;  terminals   lift 304 176 fixed;   pIn 328 176 fixed;   pOut 352 176 fixed;   aOpen 304 224 fixed;   Cd 328 224 fixed;   aEff 352 224 fixed; end; implementation eq/* Poppet Valve Area Calculation	This calcuates the opening area, discharge coefficient and effective opening	area for poppet valve.		Input		lift : Valve lift [m]		pIn : Upstream pressure [Pa]		pOut : Downstream pressure [Pa]	Output		aOpen : Valve opening [m2]		Cd : Discharge coefficient		aEff : Effective valve opening [m2]			Version  | Created by     | Place      |  Changes	------------------------------------------------------	1.0      | Kevin K. Yum   | NTNU       | First model	*/constants	real CdCorrCoeffP[3] = [0.5329;-0.2047;0.04292];	real CdCorrCoeffQ[3] = [0.5359;-0.2962;0.06275];	// Discharge coeffcient correction factors	real CdCorrCoeffPr[3] = [-0.006345;0.09503;0.8117];	// Discharge coefficient correction factor		// The fit model was taken from the Sher, E. (1990). Scavenging 	// the two-stroke engine. Progress in Energy and Combustion Science, 	// 16(2), 95-124. parameters	real global DvIntake;		 	// Valve Seat diameter	real global betaIntake;   	// valve seat angle	real global wIntake;      	// valve seat width	real global DpIntake;    		// Valve port diameter	real global DsIntake; 			// Valve stem diametervariables	real L_Dv, pr;equations	if (lift > 0) then		if (lift < (wIntake / (sin(betaIntake)*cos(betaIntake)))) then			aOpen = pi*(lift)*cos(betaIntake)*(DvIntake - 2*wIntake + lift/2*sin(betaIntake*2));		else 			if (lift <= (sqrt((DpIntake^2 - DsIntake^2)/(4*(DvIntake - wIntake)) - wIntake^2) + wIntake*tan(betaIntake))) then				aOpen = pi*(DvIntake - wIntake)*sqrt((lift - wIntake*tan(betaIntake))^2 + wIntake^2);			else				aOpen = 0.25*pi*(DpIntake^2 - DsIntake^2);			end;		end;				L_Dv = lift/DvIntake;		Cd = ((L_Dv*CdCorrCoeffP[1] + CdCorrCoeffP[2])*L_Dv + CdCorrCoeffP[3])	            / (((L_Dv + CdCorrCoeffQ[1])*L_Dv + CdCorrCoeffQ[2])*L_Dv + 	            CdCorrCoeffQ[3]);		if (pIn > pOut) then			pr = pIn/pOut;		else			pr = pOut/pIn;		end;			Cd = Cd*((CdCorrCoeffPr[1]*pr + CdCorrCoeffPr[2])*pr + CdCorrCoeffPr[3]);		aEff = aOpen*Cd;	else		aOpen = 0;		Cd = 0;		aEff = 0;	end;		 implementation_end;specification_end;			end;   MultiplyDivide1 352 248    description '<Description><Version>4.0</Version><Version>4.0</Version><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues>   <LibraryPath>Signal\Block Diagram\MultiplyDivide.emx</LibraryPath>  <TimeStamp>2007-9-27 10:14:59</TimeStamp></Description>';    knot MultiplyDivide     ports      signal knot duplicatable in multiply [1];      signal knot duplicatable in divide [1];      signal knot out output [1];    end;    icon bg ellipse     figures      ellipse 344 240 360 256 fill 16777215;    end;    implementation eqequations	output = mul (collect (multiply)) ./ mul (collect (divide));     implementation_end;   plug VONom 280.1 32;   plug dVONom 304 56;   plug pTFOut 504 336;   plug aOpenEff 520.1 280;   plug Cd 328 264;   plug areaMultiplier 448 32;   plug CA 327.8 69.9;   plug pTFIn 200 336;   PowerDemux 240 336			specifications active 'inputs_3'				specification 'default'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-10-5 22:44:58</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power in input [2,1];   power out output2;  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input; end; icon bg bottom  figures   line 128 64 128 96 width 2;   rectangle 124 64 132 96 color -1;   text '2' 133 91 color 8421504 8;  terminals   output1 128 72 fixed;   input 128 80 fixed;   output2 128 88 fixed; end; implementation eqequations	input.e = [output1.e; output2.e];	input.f = [output1.f; output2.f];implementation_end;specification_end;				specification 'inputs_1'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power in input;   power out output;  restrictions   causality constraint not_equal output input; end; icon bg bottom  figures   line 128 64 128 80 width 2;   rectangle 124 64 132 80 color -1;   text '1' 133 82 color 8421504 8;  terminals   input 128 72 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = output.e;	input.f = output.f;implementation_end;specification_end;				specification 'inputs_2'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power in input [2,1];   power out output2;  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input; end; icon bg bottom  figures   line 128 56 128 88 width 2;   rectangle 124 56 132 88 color -1;   text '2' 133 83 color 8421504 8;  terminals   output1 128 64 fixed;   input 128 72 fixed;   output2 128 80 fixed; end; implementation eqequations	input.e = [output1.e; output2.e];	input.f = [output1.f; output2.f];implementation_end;specification_end;				specification 'inputs_3' description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power in input [3,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input; end; icon bg bottom  figures   line 240 312 240 360 width 2;   rectangle 235 320 243 352 color -1;   text '3' 244 346 color 8421504 8;  terminals   output1 240 320 fixed;   output2 240 336 fixed;   output3 240 352 fixed;   input 232 336 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e];	input.f = [output1.f; output2.f; output3.f];implementation_end;specification_end;				specification 'inputs_4'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power in input [4,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input; end; icon bg bottom  figures   line 128 48 128 96 width 2;   rectangle 124 48 132 96 color -1;   text '4' 133 83 color 8421504 8;  terminals   output1 128 56 fixed;   output2 128 64 fixed;   output3 128 80 fixed;   output4 128 88 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e];	input.f = [output1.f; output2.f; output3.f; output4.f];implementation_end;specification_end;				specification 'inputs_5'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power in input [5,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;end; icon bg bottom  figures   line 128 48 128 96 width 2;   rectangle 124 48 132 96 color -1;   text '5' 133 83 color 8421504 8;  terminals   output1 128 56 fixed;   output2 128 64 fixed;   output3 128 72 fixed;   output4 128 80 fixed;   output5 128 88 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e];	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f];implementation_end;specification_end;				specification 'inputs_6'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power out output6;   power in input [6,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;   causality constraint not_equal output6 input; end; icon bg bottom  figures   line 128 40 128 104 width 2;   rectangle 124 40 132 104 color -1;   text '6' 133 83 color 8421504 8;  terminals   output1 128 48 fixed;   output2 128 56 fixed;   output3 128 64 fixed;   output4 128 80 fixed;   output5 128 88 fixed;   output6 128 96 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e; output6.e];	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f; output6.f];implementation_end;specification_end;				specification 'inputs_7'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power out output6;   power out output7;   power in input [7,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;   causality constraint not_equal output6 input;   causality constraint not_equal output7 input; end; icon bg bottom  figures   line 128 40 128 104 width 2;   rectangle 124 40 132 104 color -1;   text '7' 133 83 color 8421504 8;  terminals   output1 128 48 fixed;   output2 128 56 fixed;   output3 128 64 fixed;   output4 128 72 fixed;   output5 128 80 fixed;   output6 128 88 fixed;   output7 128 96 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e; output6.e; output7.e];	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f; output6.f; output7.f];implementation_end;specification_end;				specification 'inputs_8'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power out output6;   power out output7;   power out output8;   power in input [8,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;   causality constraint not_equal output6 input;   causality constraint not_equal output7 input;   causality constraint not_equal output8 input; end; icon bg bottom  figures   line 128 32 128 112 width 2;   rectangle 124 32 132 112 color -1;   text '8' 133 83 color 8421504 8;  terminals   output1 128 40 fixed;   output2 128 48 fixed;   output3 128 56 fixed;   output4 128 64 fixed;   output5 128 80 fixed;   output6 128 88 fixed;   output7 128 96 fixed;   output8 128 104 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e; output6.e; output7.e; output8.e];	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f; output6.f; output7.f; output8.f];implementation_end;specification_end;				specification 'inputs_9'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerDemux  ports   power out output1;   power out output2;   power out output3;   power out output4;   power out output5;   power out output6;   power out output7;   power out output8;   power out output9;   power in input [9,1];  restrictions   causality constraint not_equal output1 input;   causality constraint not_equal output2 input;   causality constraint not_equal output3 input;   causality constraint not_equal output4 input;   causality constraint not_equal output5 input;   causality constraint not_equal output6 input;   causality constraint not_equal output7 input;   causality constraint not_equal output8 input;   causality constraint not_equal output9 input; end; icon bg bottom  figures   line 128 32 128 112 width 2;   text '9' 132 83 color 8421504 8;  terminals   output1 128 40 fixed;   output2 128 48 fixed;   output3 128 56 fixed;   output4 128 64 fixed;   output5 128 72 fixed;   output6 128 80 fixed;   output7 128 88 fixed;   output8 128 96 fixed;   output9 128 104 fixed;   input 128 72 fixed; end; implementation eqequations	input.e = [output1.e; output2.e; output3.e; output4.e; output5.e; output6.e; output7.e; output8.e; output9.e];implementation_end;	input.f = [output1.f; output2.f; output3.f; output4.f; output5.f; output6.f; output7.f; output8.f; output9.f];specification_end;			end;   PowerMux 448 336			specifications active 'inputs_3'				specification 'default'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerDemux.emx</LibraryPath>  <TimeStamp>2011-10-5 22:44:58</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power out output [2,1];   power in input2;  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output; end; icon bg bottom  figures   line 128 64 128 96 width 2;   rectangle 124 64 132 96 color -1;   text '2' 133 91 color 8421504 8;  terminals   input1 128 72 fixed;   output 128 80 fixed;   input2 128 88 fixed; end; implementation eqequations	output.e = [input1.e; input2.e];	output.f = [input1.f; input2.f];implementation_end;specification_end;				specification 'inputs_1'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input;   power out output;  restrictions   causality constraint not_equal input output; end; icon bg bottom  figures   line 128 64 128 80 width 2;   rectangle 124 64 132 80 color -1;   text '1' 133 82 color 8421504 8;  terminals   input 128 72 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = input.e;	output.f = input.f;implementation_end;specification_end;				specification 'inputs_2'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power out output [2,1];   power in input2;  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output; end; icon bg bottom  figures   line 128 56 128 88 width 2;   rectangle 124 56 132 88 color -1;   text '2' 133 83 color 8421504 8;  terminals   input1 128 64 fixed;   output 128 72 fixed;   input2 128 80 fixed; end; implementation eqequations	output.e = [input1.e; input2.e];	output.f = [input1.f; input2.f];implementation_end;specification_end;				specification 'inputs_3' description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power out output [3,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output; end; icon bg bottom  figures   line 448 312 448 360 width 2;   rectangle 443 312 451 344 color -1;   text '3' 452 338 color 8421504 8;  terminals   input1 448 320 fixed;   input2 448 336 fixed;   input3 448 352 fixed;   output 456 336 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e];	output.f = [input1.f; input2.f; input3.f];implementation_end;specification_end;				specification 'inputs_4'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power out output [4,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output; end; icon bg bottom  figures   line 128 48 128 96 width 2;   rectangle 124 48 132 96 color -1;   text '4' 133 83 color 8421504 8;  terminals   input1 128 56 fixed;   input2 128 64 fixed;   input3 128 80 fixed;   input4 128 88 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e];	output.f = [input1.f; input2.f; input3.f; input4.f];implementation_end;specification_end;				specification 'inputs_5'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power out output [5,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output; end; icon bg bottom  figures   line 128 48 128 96 width 2;   rectangle 124 48 132 96 color -1;   text '5' 133 83 color 8421504 8;  terminals   input1 128 56 fixed;   input2 128 64 fixed;   input3 128 72 fixed;   input4 128 80 fixed;   input5 128 88 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e];	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f];implementation_end;specification_end;				specification 'inputs_6'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power in input6;   power out output [6,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output;   causality constraint not_equal input6 output; end; icon bg bottom  figures   line 128 40 128 104 width 2;   rectangle 124 40 132 104 color -1;   text '6' 133 83 color 8421504 8;  terminals   input1 128 48 fixed;   input2 128 56 fixed;   input3 128 64 fixed;   input4 128 80 fixed;   input5 128 88 fixed;   input6 128 96 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e; input6.e];	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f; input6.f];implementation_end;specification_end;				specification 'inputs_7'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power in input6;   power in input7;   power out output [7,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output;   causality constraint not_equal input6 output;   causality constraint not_equal input7 output; end; icon bg bottom  figures   line 128 40 128 104 width 2;   rectangle 124 40 132 104 color -1;   text '7' 133 83 color 8421504 8;  terminals   input1 128 48 fixed;   input2 128 56 fixed;   input3 128 64 fixed;   input4 128 72 fixed;   input5 128 80 fixed;   input6 128 88 fixed;   input7 128 96 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e; input6.e; input7.e];	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f; input6.f; input7.f];implementation_end;specification_end;				specification 'inputs_8'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power in input6;   power in input7;   power in input8;   power out output [8,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output;   causality constraint not_equal input6 output;   causality constraint not_equal input7 output;   causality constraint not_equal input8 output; end; icon bg bottom  figures   line 128 32 128 112 width 2;   rectangle 124 32 132 112 color -1;   text '8' 133 83 color 8421504 8;  terminals   input1 128 40 fixed;   input2 128 48 fixed;   input3 128 56 fixed;   input4 128 64 fixed;   input5 128 80 fixed;   input6 128 88 fixed;   input7 128 96 fixed;   input8 128 104 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e; input6.e; input7.e; input8.e];	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f; input6.f; input7.f; input8.f];implementation_end;specification_end;				specification 'inputs_9'description '<Description>   <Version>4.1</Version>  <LibraryPath>Bond Graph\PowerMux.emx</LibraryPath>  <TimeStamp>2011-3-4 15:12:50</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues> <AllowLibraryUpdate>True</AllowLibraryUpdate></Description>'; type PowerMux  ports   power in input1;   power in input2;   power in input3;   power in input4;   power in input5;   power in input6;   power in input7;   power in input8;   power in input9;   power out output [9,1];  restrictions   causality constraint not_equal input1 output;   causality constraint not_equal input2 output;   causality constraint not_equal input3 output;   causality constraint not_equal input4 output;   causality constraint not_equal input5 output;   causality constraint not_equal input6 output;   causality constraint not_equal input7 output;   causality constraint not_equal input8 output;   causality constraint not_equal input9 output; end; icon bg bottom  figures   line 128 32 128 112 width 2;   text '9' 132 83 color 8421504 8;  terminals   input1 128 40 fixed;   input2 128 48 fixed;   input3 128 56 fixed;   input4 128 64 fixed;   input5 128 72 fixed;   input6 128 80 fixed;   input7 128 88 fixed;   input8 128 96 fixed;   input9 128 104 fixed;   output 128 72 fixed; end; implementation eqequations	output.e = [input1.e; input2.e; input3.e; input4.e; input5.e; input6.e; input7.e; input8.e; input9.e];implementation_end;	output.f = [input1.f; input2.f; input3.f; input4.f; input5.f; input6.f; input7.f; input8.f; input9.f];specification_end;			end;   Splitter1 352 280    description '<Description><Version>4.0</Version>   <LibraryPath>Signal\Block Diagram\Splitter.emx</LibraryPath>  <TimeStamp>2008-01-17 11:28:29</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues></Description>';    knot Splitter     ports      signal knot duplicatable out output [1];      signal knot in input [1];    end;    icon bg ellipse     figures      ellipse 348.8 276.8 355.2 283.2 color -1 fill 0;      ellipse 347.7 275.7 356.3 284.3 color -1;     terminals      input 352 280 fixed;    end;    implementation eqequations    collect (output) = input;implementation_end;   Submodel2 352 351    description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>FlowRestriction\IdealNozzleCompGas.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-6-22 16:30:00</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate> </Description></Information>';    type Submodel     ports      signal in Aeff; "Effective area of nozzle (m2)"      pseudohydraulic in ppIn;      pseudothermalh in pTIn;      power in pFIn;      pseudohydraulic out ppOut;      pseudothermalh out pTOut;      power out pFOut;     restrictions      causality fixed in ppOut;      causality fixed in pFOut;      causality fixed in ppIn;      causality fixed in pTIn;      causality fixed in pFIn;    end;    icon bg bottom     figures      text 'R' 352 336 53 bold;      text 'IdealNozzle
CompFlow' 352 376 16;     terminals      Aeff 352 304 fixed;      ppIn 320 320 fixed;      pTIn 320 336 fixed;      pFIn 320 352 fixed;      ppOut 384 320 fixed;      pTOut 384 336 fixed;      pFOut 384 352 fixed;    end;    implementation eq/* Ideal Nozzle ModelUses ideal nozzle equation for compressible flows assuming isentropic process. Flow restriction field. No states.Input   - Effective area of nozzle (Aeff)  - p,T,F in  - p,T,F outOutput  - dm, dE, dmb in  - dm, dE, dmb out*/parameters 	real global fs;	string global dll_ICE;	string global dll_fcn_idealNozzle;variables	real pIn, TIn, FIn, pOut;	real dm, dE, dmb;	real aa, d, pr;	real	inArrFlow[4];	real outArrFlow[3];equations  // start typing here 	aa = ppIn.e / ppOut.e;	if (aa > 1) then		pIn	= ppIn.e; TIn = pTIn.e; FIn = pFIn.e; d	= 1; 	pr = aa;		pOut = ppOut.e;	else		pIn	= ppOut.e; TIn=pTOut.e; FIn= pFOut.e;	d	= -1; pr	= 1.0/aa;		pOut = ppIn.e;	end;		// Calculate thermodynamic properties from (T,P,x)	inArrFlow = [1,Aeff,pIn,TIn,FIn,pOut,fs];	outArrFlow = dll(dll_ICE,dll_fcn_idealNozzle, inArrFlow);			dm = outArrFlow[1]*d;	dE = outArrFlow[2]*d;		dmb = outArrFlow[3]*d;	ppIn.dm = dm;	ppOut.dm  = dm;	pTIn.dH = dE;	pTOut.dH = dE;	pFIn.f = dmb;	pFOut.f = dmb;implementation_end;  end;  connections   areaMultiplier -> MultiplyDivide1\multiply 448 248;   CA -> ExhVVLift1\CA;   dVONom -> ExhVVLift1\dCA_lift_nom;   EffortSensor1\effort -> IntakeVVArea\pIn 272 160 328 160;   EffortSensor1\p2 => Submodel2\ppIn;   EffortSensor2\effort -> IntakeVVArea\pOut 416 160 352 160;   EffortSensor2\p2 => PowerMux\input1;   ExhVVLift1\lift -> IntakeVVArea\lift;   IntakeVVArea\aEff -> MultiplyDivide1\multiply;   IntakeVVArea\Cd -> Cd;   MultiplyDivide1\output -> Splitter1\input;   PowerDemux\output1 => EffortSensor1\p1;   PowerDemux\output2 => Submodel2\pTIn;   PowerDemux\output3 => Submodel2\pFIn;   PowerMux\output => pTFOut;   pTFIn => PowerDemux\input;   Splitter1\output -> aOpenEff;   Splitter1\output -> Submodel2\Aeff;   Submodel2\pFOut => PowerMux\input3;   Submodel2\ppOut => EffortSensor2\p1;   Submodel2\pTOut => PowerMux\input2;   VONom -> ExhVVLift1\CA_start_nom;  end;  figures   text 'Global parameters
      real global lift_max;     // Maximum lift of the vavle
      real global nstorke;     // number of stroke
      real hidden global CA_start_ref;        //Reference start CA for start of valve lift
      real hidden global dCA_lift_up;	//Lift up time (should not be changed unless file is changed
      real hidden global dCA_lift_down;     //Lift down time (should not be changed unless file is changed
      real hidden global dCA_lift_top_ref;   //Reference duration for lift up
      real global Dv;		 	// Valve Seat diameter
      real global beta;   	// valve seat angle
      real global w;      	// valve seat width
      real global Dp;    		// Valve port diameter
      real global Ds; 			// Valve stem diameter
      
' 288 504 16; implementation_end;specification_end;end;]]>
  </Sidops>
</Model>
</Document>
