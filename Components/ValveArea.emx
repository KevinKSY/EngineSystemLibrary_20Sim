<?xml version="1.0" encoding="UTF-8"?>
<Document>
  <Icons>
    <Icon size="128" bpp="32" format="png">
<![CDATA[89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda793000000097048597300000ec400000ec401952b0e1b0000030249444154789ceddc318eda400040d171142991a830d45c2105c59629b8132da7a1ce15728ddc208501294dcad922f26a328c0167b378d8ff9f84b4991d1b84bf077b23d1c41883b83e4cfd02342d03803300380380330038038033003803803300380380330038038033003803803300380380330038038033003803803300380380330038038033003803803300380380330038038033003803803300380380330038038033003803803300380380fb581a6c9ae62984f0f9ceaf456fef678cf1473a701640d3344febf5fafb66b3f97dbfd7a57bd8eff7b310c2a774acc9bf2ab6699aafdbedf6db6eb79bdff3c5e9edcd66b310636cd2b1e247400821f81dc20c5e04c215578018a32b00842b009c01c0791108e70a00670070de05c0b902c019009c770170ae0070935f04cee77ffed3f1743a5d9dd3bb656e3e27ddc7a5ed695c01e0260fa03f1bf3b3bc979ed163e65e1a1fda9ea8aa8bc04bcf99ff6eccdcd2783ea76ddb104208c7e3f1af9ff3dff7d2df95f673cbdc1a4cbe02d4a674005f337669bc065504d09f21f91b553a13c7cc2d8d0f6d9fbf9ed2bc743c973e4ffaa85d1501d464e8a05d8b303fe06ddb567de6f706af01de9bd71e8c5bb67f84039eab6605c8cfaaa1257dccdc6b07e47f1eb0d245e2237c044cfe87a0a1e72ffdfcaf730f87c3d9d862b1286e33661fa5f9fdbc31772d53aa6605a85d1f4cfaef7cecda3635aaeaef005dd785e572f9f2c6755d37f83aaecd5d2e9717f7916edf75ddcb783eb79f17c2f9012ded7be8a0bb023cb03490a1b15be6d4a8babb80316fdaa5b9b7ec279d736dfed8fd8dd96e4a555e04ea7efc08803300b8aaee02747fae00700600e75d009c2b009c01c0791700e70a00e745209c2b009c01c0791148d77fde279ffb5f4208d1c7fb7bac56ab5ff9f13efbae60b1780d006700700600670070060067007006006700700600670070060067007006006700700600670070060067007006006700700600670070060067007006006700700600670070060067007006006700700600670070060067007006006700700600670070cffa15e320f88f0dc60000000049454e44ae426082]]>
     </Icon>
  </Icons>
  <Model version="4.6" build="4.6.0.6684">
    <Sidops>
<![CDATA[IntakeVVArea 328.1 200.1specifications active 'Intake'	specification 'Exhaust' description '<Information> <Description>    <Version>4.5</Version>  <LibraryPath>Components\PoppetValveAreaCd.emx</LibraryPath><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <TimeStamp>2015-10-20 15:54:56</TimeStamp><AllowLibraryUpdate>False</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration> </Description></Information>'; type Submodel  ports   signal in lift {m} ;   signal in pIn {Pa} ;   signal in pOut {Pa} ;   signal out aOpen {m2} ; "Open area"   signal out Cd; "Discharge coefficient"   signal out aEff {m2} ; "Effective area of nozzle" end; icon bg bottom  figures   rectangle 287.8 185.1 368.4 215.2 color 0 fill 15132390;   text 'VVArea' 328 200 color 0 16;  terminals   lift 304 176 fixed;   pIn 328 176 fixed;   pOut 352 176 fixed;   aOpen 304 224 fixed;   Cd 328 224 fixed;   aEff 352 224 fixed; end; implementation eq/* Poppet Valve Area Calculation	This calcuates the opening area, discharge coefficient and effective opening	area for poppet valve.		Input		lift : Valve lift [m]		pIn : Upstream pressure [Pa]		pOut : Downstream pressure [Pa]	Output		aOpen : Valve opening [m2]		Cd : Discharge coefficient		aEff : Effective valve opening [m2]			Version  | Created by     | Place      |  Changes	------------------------------------------------------	1.0      | Kevin K. Yum   | NTNU       | First model	*/constants	real CdCorrCoeffP[3] = [0.5329;-0.2047;0.04292];	real CdCorrCoeffQ[3] = [0.5359;-0.2962;0.06275];	// Discharge coeffcient correction factors	real CdCorrCoeffPr[3] = [-0.006345;0.09503;0.8117];	// Discharge coefficient correction factor		// The fit model was taken from the Sher, E. (1990). Scavenging 	// the two-stroke engine. Progress in Energy and Combustion Science, 	// 16(2), 95-124. parameters	integer global noExhVV;	real global DvExh;		 	// Valve Seat diameter	real global betaExh;   	// valve seat angle	real global wExh;      	// valve seat width	real global DpExh;    		// Valve port diameter	real global DsExh; 			// Valve stem diametervariables	real L_Dv, pr;equations	if (lift > 0) then		if (lift < (wExh / (sin(betaExh)*cos(betaExh)))) then			aOpen = pi*(lift)*cos(betaExh)*(DvExh - 2*wExh + lift/2*sin(betaExh*2));		else 			if (lift <= (sqrt((DpExh^2 - DsExh^2)/(4*(DvExh - wExh)) - wExh^2) + wExh*tan(betaExh))) then				aOpen = pi*(DvExh - wExh)*sqrt((lift - wExh*tan(betaExh))^2 + wExh^2);			else				aOpen = 0.25*pi*(DpExh^2 - DsExh^2);			end;		end;				L_Dv = lift/DvExh;		Cd = ((L_Dv*CdCorrCoeffP[1] + CdCorrCoeffP[2])*L_Dv + CdCorrCoeffP[3])	            / (((L_Dv + CdCorrCoeffQ[1])*L_Dv + CdCorrCoeffQ[2])*L_Dv + 	            CdCorrCoeffQ[3]);		if (pIn > pOut) then			pr = pIn/pOut;		else			pr = pOut/pIn;		end;			Cd = Cd*((CdCorrCoeffPr[1]*pr + CdCorrCoeffPr[2])*pr + CdCorrCoeffPr[3]);		aEff = aOpen*Cd;	else		aOpen = 0;		Cd = 0;		aEff = 0;	end;		 implementation_end;specification_end;	specification 'Intake' description '<Information>
 <Description>
    <Version>4.6</Version>
  <LibraryPath>Components\ValveArea.emx</LibraryPath>
<IsMainModel>1</IsMainModel>
  <KeepParameterValues>False</KeepParameterValues>
    <TimeStamp>2016-4-4 11:12:58</TimeStamp>
<AllowLibraryUpdate>False</AllowLibraryUpdate>
  <Configuration>
   <struct>
    <member>
     <name>DocumentationMask</name>
     <value>
      <struct></struct>
     </value>
    </member>
   </struct>
  </Configuration>
 </Description>
</Information>'; type Submodel  ports   signal in lift {m} ;   signal in pIn {Pa} ;   signal in pOut {Pa} ;   signal out aOpen {m2} ; "Open area"   signal out Cd; "Discharge coefficient"   signal out aEff {m2} ; "Effective area of nozzle" end; icon bg bottom  figures   rectangle 287.8 185.1 368.4 215.2 color 0 fill 15132390;   text 'VVArea' 328 200 color 0 16;  terminals   lift 304 176 fixed;   pIn 328 176 fixed;   pOut 352 176 fixed;   aOpen 304 224 fixed;   Cd 328 224 fixed;   aEff 352 224 fixed; end; implementation eq/* Poppet Valve Area Calculation	This calcuates the opening area, discharge coefficient and effective opening	area for poppet valve.		Input		lift : Valve lift [m]		pIn : Upstream pressure [Pa]		pOut : Downstream pressure [Pa]	Output		aOpen : Valve opening [m2]		Cd : Discharge coefficient		aEff : Effective valve opening [m2]			Version  | Created by     | Place      |  Changes	------------------------------------------------------	1.0      | Kevin K. Yum   | NTNU       | First model	*/constants	real CdCorrCoeffP[3] = [0.5329;-0.2047;0.04292];	real CdCorrCoeffQ[3] = [0.5359;-0.2962;0.06275];	// Discharge coeffcient correction factors	real CdCorrCoeffPr[3] = [-0.006345;0.09503;0.8117];	// Discharge coefficient correction factor		// The fit model was taken from the Sher, E. (1990). Scavenging 	// the two-stroke engine. Progress in Energy and Combustion Science, 	// 16(2), 95-124. parameters	integer global noInVV; 		// numver of intake valves	real global DvIntake;		 	// Valve Seat diameter	real global betaIntake;   	// valve seat angle	real global wIntake;      	// valve seat width	real global DpIntake;    		// Valve port diameter	real global DsIntake; 			// Valve stem diametervariables	real L_Dv, pr;equations	if (lift > 0) then		if (lift < (wIntake / (sin(betaIntake)*cos(betaIntake)))) then			aOpen = pi*(lift)*cos(betaIntake)*(DvIntake - 2*wIntake + lift/2*sin(betaIntake*2));		else 			if (lift <= (sqrt((DpIntake^2 - DsIntake^2)/(4*(DvIntake - wIntake)) - wIntake^2) + wIntake*tan(betaIntake))) then				aOpen = pi*(DvIntake - wIntake)*sqrt((lift - wIntake*tan(betaIntake))^2 + wIntake^2);			else				aOpen = 0.25*pi*(DpIntake^2 - DsIntake^2);			end;		end;				L_Dv = lift/DvIntake;		Cd = ((L_Dv*CdCorrCoeffP[1] + CdCorrCoeffP[2])*L_Dv + CdCorrCoeffP[3])	            / (((L_Dv + CdCorrCoeffQ[1])*L_Dv + CdCorrCoeffQ[2])*L_Dv + 	            CdCorrCoeffQ[3]);		if (pIn > pOut) then			pr = pIn/pOut;		else			pr = pOut/pIn;		end;			Cd = Cd*((CdCorrCoeffPr[1]*pr + CdCorrCoeffPr[2])*pr + CdCorrCoeffPr[3]);		aEff = aOpen*Cd;	else		aOpen = 0;		Cd = 0;		aEff = 0;	end;		 implementation_end;specification_end;end;]]>
    </Sidops>
  </Model>
</Document>
