<?xml version="1.0" encoding="UTF-8"?>
<Document>
 <Icons>
    <Icon size="128" bpp="32" format="png">
<![CDATA[89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda793000000097048597300000ec400000ec401952b0e1b0000045d49444154789ced9dbb8a53511846d7f68258d9daf918965a6aa560213e85ad9df832a2ddd8d8ea1be86b585a89d5b64806c79949722eff651fff6f410818c10d59ae2fa3494eebbd23ea7223fb00221709501c09501c09501c09501c09501c09501c09501c09501c09501c09501c09501c09501c09501c09501c09501c09501c09501c09509c5b871e68ad3d8a3c8808e17beffde73fbfd27bbf72031e005db7ffeef6faf273ddae7b57706bed33f0143803be5ff90d626bdc04de00b781fbbdf71fe70f1c9a808fec04b8d37b7fe77f3ee1496bed25bb27ffcbc5271f0ebf083c037e018f5b6bf79ccf27fc79b6bfff78f9816b05d8bf50f80adc059ebb1d4bb8d35abbc3dfe7f0ecf2e3c77e0c3cb7e5a5f5a14428cfd9fd45be927f382e8066e0ffe060fee188009a81ed732aff70fa5f023503dbe668fee1b4009a816d7334ff704200cdc07699927f98f69f419a816d7232ff304d00cdc03639997f98208066607b4ccd3f4c7f3f8066605b4cca3f4c174033b02d26e51f260aa019d80e73f20ff3de12a619d80693f30ff304d00c6c83c9f98719026806c6676efe61febb82350363332bff305f00cdc0d8ccca3fcc144033302e4bf20fcb3e18a2191893d9f98765026806c66476fe6181009a81f1589a7f58fed940cdc0582cca3f2c17403330168bf20f0b05d00c8cc39afcc3ba8f876b06c66071fe619d009a8131589c7f58218066209fb5f987f5df10a219c86555fe61bd009a815c56e51f560aa019c8c322ff60f325519a811c56e71f6c04d00ce4b03aff60208066201eabfc83ddf7046a066231c93fd809a01988c524ff60248066200ecbfc83ed57c56a066230cb3fd80aa01988c12cff60288066c01febfc83fdb7856b067c31cd3fd80bf001cd8027a6f90763017aefbfd9a54933608c47fec1e782119ff6f79a015bccf30f3e02e8a7011fccf30f0e026806ecf1ca3ff85d334833608b4bfec14f00cd802d2ef907270134037678e61f7c2f1ba719b0c12dffe02b8066c006b7fc83a3009a81f578e71ffcaf1caa1958876bfec15f00cdc03a5cf30fce0268069613917f88b978b4666019eef98718013403cb70cf3f0408a019984f54fe21a600a019984b48fe214e00cdc03c42f20f41026806a613997f882b006806a612967f88154033308db0fc43a0009a81d344e71f620b009a815384e61fe205d00c1c2734ff102c8066e03019f987f8028066e010e1f9871c013403d7139e7f481040337095acfc434e014033709994fc439e009a817f49c93f2409a019f84b66fe21af00a01938272dff902b806660475afe215100cd407efe21b700a01948cd3fe40b507d0652f30fc902549e8111f20ff90580ba33909e7f184380aa33909e7f1840808a33304afe610001f6549b8121f20f702bf30fbfc0c519789b7d98005eecef53f30fd07aefd96700a0b5f61e78957d8e40be014fb30b3092000f8127d9e788a2f7fe2efb0c3090002287515e048a24244071244071244071244071244071244071244071244071244071244071244071244071244071244071244071fe002c5366e502968d5b0000000049454e44ae426082]]>
   </Icon>
</Icons>
 <Model version="4.6" build="4.5.1.5561">
    <Sidops>
<![CDATA[TURBIN1 231.9 72specifications active 'flow_ER_Eff_UcPoly'	specification 'flow_ER_Eff_UcERPoly'description '<Information> <Description>    <LibraryPath>FlowRestriction\Turbine_polynomial.emx</LibraryPath>  <TimeStamp>2015-11-3 14:48:18</TimeStamp>  <Version>4.5</Version></Description></Information>'; type R  ports   power in ppin;   power in pTin;   power out ppout;   power out pTout;   power in pFin;   power out pFout;   power out pMech;   signal out eta_t;   signal in eta_t_corr;  restrictions   causality fixed in ppin;   causality fixed in pTin;   causality fixed in ppout;   causality fixed in pTout; end; icon bg bottom  figures   group    line 525.7 129.5 466.2 129.5 color 0;    line 510.8 174.5 481.1 174.5 466.2 129.5 color 0;    line 510.8 174.5 525.7 129.5 color 0;   end;  terminals   ppin 536 128 fixed;   pTin 535.9 152 fixed;   ppout 456 128 fixed;   pTout 455.9 152 fixed;   pFin 536 176 fixed;   pFout 456 176 fixed;   pMech 495.9 184 fixed; end; implementation eqparameters	real global flow_coeff_turb[3];									//Flow coefficient for the flow model a*x^b+c	real global eff_coeff_turb[6];// Thermo package	string global dll_ICE;	string global dll_fcn_ThDP;	string global dll_fcn_GetTFromPhF;	real global fs;variables	real pu, pd, fu, fd, tu, td, omegat, er, td_calc, tdi;	real interesting momt, dmt, dmft, deu, ded, dedd;//	real interesting eta_t;	real hidden dmt_corr;	real hidden hu, dhi, hdi, k;	real Uc;	real hidden hd, err_td, dtd;// Thermo package	real inarr[5], outarr[16];//initialequations//	eff_coeff = eff_coeff_T_cw * [T_cw;1];code   pu 	= ppin.e;	pd 	= ppout.e;	fu  	= pFin.e;  	fd 	= pFout.e;	tu		= pTin.e;	td 	= pTout.e;	omegat = pMech.f;		// Calculation of the turbine is based on the flow model	//      m_dot = a*ER^b + c 	// where the flow parameters a, b, c are found by fitting 	// the given turbine map or compressor matching procedure. 	// The efficiency is modeled using 2nd order polynomial of	// ER and Uc (Blade-speed ratio)	// Calculating mass flow	er = pu / pd;	dmt_corr = flow_coeff_turb[1]*er^flow_coeff_turb[2] + flow_coeff_turb[3];	dmt = dmt_corr*(pu/1000)/sqrt(tu);	dmft = dmt*fu*fs/(1+fu*fs);		// Calculating inlet flow enthalpy and energy flow	inarr 	= [pu; tu; fu; fs; 1];	outarr	= dll(dll_ICE,dll_fcn_ThDP, inarr);	hu = outarr[2];	deu = dmt*hu;	// Calculating  efficiency of the turbine and outlet enthalpy and temperature	k = outarr[16];	tdi = tu*er^((1-k)/k);	inarr 	= [pd;tdi;fu;fs;1];	outarr	= dll(dll_ICE,dll_fcn_ThDP, inarr);	hdi = outarr[2];	dhi = (hu - hdi);	Uc = omegat/sqrt(2*dhi);	eta_t = limit(eff_coeff_turb[1] + eff_coeff_turb[2]*Uc + eff_coeff_turb[3]*Uc^2 			+ eff_coeff_turb[4]*er + eff_coeff_turb[5]*Uc*er + eff_coeff_turb[6]*er^2,0.5,1);	eta_t = eta_t_corr*eta_t;	dedd = dmt*eta_t*dhi;	ded = deu - dedd;		// Calculating the torque	momt = dedd / omegat;	ppin.f	= dmt;	ppout.f	= dmt;	pFin.f	= dmft;	pFout.f	= dmft;	pTin.f	= deu;	pTout.f	= ded;	pMech.e	= momt;		// Calculating the discharge temperature	hd = ded / dmt;	inarr[1:4] = [pd; hd; fu; fs];	td_calc = dll(dll_ICE,dll_fcn_GetTFromPhF,inarr);		implementation_end;specification_end;	specification 'flow_ER_Eff_UcPoly' description '<Information>
 <Description>
    <LibraryPath>FlowRestriction\Turbine_polynomial.emx</LibraryPath>
  <TimeStamp>2016-4-4 16:55:39</TimeStamp>
  <Version>4.6</Version>
<IsMainModel>0</IsMainModel>
  <KeepParameterValues>False</KeepParameterValues>
  <AllowLibraryUpdate>True</AllowLibraryUpdate>
  <Configuration>
   <struct>
    <member>
     <name>DocumentationMask</name>
     <value>
      <struct></struct>
     </value>
    </member>
   </struct>
  </Configuration>
 </Description>
</Information>'; type R  ports   power in ppin;   power in pTin;   power out ppout;   power out pTout;   power in pFin;   power out pFout;   power out pMech;   signal out eta_t;   signal in eta_t_corr;  restrictions   causality fixed in ppin;   causality fixed in pTin;   causality fixed in ppout;   causality fixed in pTout; end; icon bg bottom  figures   group    line 261.7 49.5 202.2 49.5 color 0;    line 246.8 94.5 217.1 94.5 202.2 49.5 color 0;    line 246.8 94.5 261.7 49.5 color 0;   end;  terminals   ppin 272 48 fixed;   pTin 271.9 72 fixed;   ppout 192 48 fixed;   pTout 191.9 72 fixed;   pFin 272 96 fixed;   pFout 192 96 fixed;   pMech 231.9 104 fixed; end; implementation eqparameters	real global flow_coeff_turb[3];									//Flow coefficient for the flow model a*x^b+c// Thermo package	string global dll_ICE;	string global dll_fcn_ThDP;	string global dll_fcn_GetTFromPhF;	real global fs;	real global Uc_opt;	real global Dturb_wheel;	real global eta_t_max;	variables	real pu, pd, fu, fd, tu, td, omegat, er, td_calc, tdi;	real interesting momt, dmt, dmft, deu, ded, dedd;//	real interesting eta_t;	real hidden dmt_corr;	real hidden hu, dhi, hdi, k;	real Uc_nom;	real hidden hd, err_td, dtd;// Thermo package	real inarr[5], outarr[16];//initialequations//	eff_coeff = eff_coeff_T_cw * [T_cw;1];code   pu 	= ppin.e;	pd 	= ppout.e;	fu  	= pFin.e;  	fd 	= pFout.e;	tu		= pTin.e;	td 	= pTout.e;	omegat = pMech.f;		// Calculation of the turbine is based on the flow model	//      m_dot = a*ER^b + c 	// where the flow parameters a, b, c are found by fitting 	// the given turbine map or compressor matching procedure. 	// The efficiency is modeled using 2nd order polynomial of	// ER and Uc (Blade-speed ratio)	// Calculating mass flow	er = pu / pd;	dmt_corr = flow_coeff_turb[1]*er^flow_coeff_turb[2] + flow_coeff_turb[3];	dmt = dmt_corr*(pu/1000)/sqrt(tu);	dmft = dmt*fu*fs/(1+fu*fs);		// Calculating inlet flow enthalpy and energy flow	inarr 	= [pu; tu; fu; fs; 1];	outarr	= dll(dll_ICE,dll_fcn_ThDP, inarr);	hu = outarr[2];	deu = dmt*hu;	// Calculating  efficiency of the turbine and outlet enthalpy and temperature	k = outarr[16];	tdi = tu*er^((1-k)/k);	inarr 	= [pd;tdi;fu;fs;1];	outarr	= dll(dll_ICE,dll_fcn_ThDP, inarr);	hdi = outarr[2];	dhi = (hu - hdi);	Uc_nom = 0.5*(Dturb_wheel)*(omegat)/sqrt(2*dhi) / Uc_opt;	eta_t = eta_t_max*Uc_nom*(2 - Uc_nom);	eta_t = eta_t_corr*eta_t;	dedd = dmt*eta_t*dhi;	ded = deu - dedd;		// Calculating the torque	momt = dedd / omegat;	ppin.f	= dmt;	ppout.f	= dmt;	pFin.f	= dmft;	pFout.f	= dmft;	pTin.f	= deu;	pTout.f	= ded;	pMech.e	= momt;		// Calculating the discharge temperature	hd = ded / dmt;	inarr[1:4] = [pd; hd; fu; fs];	td_calc = dll(dll_ICE,dll_fcn_GetTFromPhF,inarr);		implementation_end;specification_end;end;]]>
  </Sidops>
</Model>
</Document>
