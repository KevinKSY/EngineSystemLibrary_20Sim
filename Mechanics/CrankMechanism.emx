<?xml version="1.0" encoding="UTF-8"?>
<Document>
 <Icons>
    <Icon size="256" bpp="32" format="png">
<![CDATA[]]>
   </Icon>
</Icons>
 <Model version="4.6" build="4.6.1.6898">
    <Sidops>
<![CDATA[CrankMechanism 615.5 944.5specifications active 'LagrangianIC'	specification 'kinematicsOnly'description '<Information> <Description>    <Version>4.5</Version><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>  <AllowLibraryUpdate>True</AllowLibraryUpdate>  <Configuration>   <struct>    <member>     <name>DocumentationMask</name>     <value>      <struct></struct>     </value>    </member>   </struct>  </Configuration>    <LibraryPath>Mechanics\CrankMechanismKinematics.emx</LibraryPath>  <TimeStamp>2015-10-22 22:30:23</TimeStamp></Description></Information>'; type CrankMechanism  ports   power in p1;   signal out q_rad;   power out p2;   signal out flow;   signal in p_scvg; end; icon bg bottom shadow 11776947  figures   ellipse 315 292 339 316 color 0 width 3;   line 328 304 298 278 328 224 color 0 width 3;   ellipse 286 266 310 290 color 0 width 3;   ellipse 319 216 335 232 color 0 width 3;   line 302 232 302 200 350 200 350 232 color 0 width 3;  terminals   p1 328 192 fixed;   q_rad 368 232 fixed;   p2 328 320 fixed;   flow 367 184 fixed; end; implementation bg  submodels   FlowSensor2 296 600    knot FlowSensor     ports      power knot in p1 [1];      power knot out p2 [1];      signal knot out flow [1];     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse     figures      ellipse 289.5 593.5 302.5 606.5 color 0 fill 16777215;      text 'f' 296.5 598.5 color 0;    end;    implementation eqequations	p2.f = p1.f;	p1.e = p2.e;	flow = p1.f;      implementation_end;   MSe 216 424    description '<Information> <Description>    <Version>4.2</Version><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <LibraryPath>Bond Graph\MSe.emx</LibraryPath>  <TimeStamp>2011-11-29 16:12:33</TimeStamp></Description></Information>';    type MSe     ports      power in p;      signal in p_scvg;     restrictions      causality fixed out p;    end;    icon bg bottom     figures      text 'MSe' 216 424 color 0 18 bold;    end;    implementation eqvariables	real flow;equations	p.e = p_scvg;	flow = p.f;implementation_end;   MTF2 296 512    type MTF     ports      power in p1;      power out p2;      signal in pfi;     restrictions      causality constraint not_equal p1 p2;    end;    icon bg     figures      text 'MTF' 296 512 color 0 18 bold;    end;    implementation eqparameters	real global S, lambdaR;variables	real m;	real csin, ccos;equations		csin=sin(pfi);ccos=cos(pfi);	m = S/2.0*(csin + lambdaR*csin*ccos/sqrt(1.0-(lambdaR*csin)^2));					p1.e = 1/(m + 1e-6) * p2.e;	p2.f  = 1/(m + 1e-6) * p1.f;     implementation_end;   plug q_rad 416.1 552;   plug p2 295.9 648.1;   plug flow 415.9 600.1;   plug p_scvg 88 423.9;   plug p1 295.9 312;   OneJunction3 296 424    knot OneJunction     ports      power knot duplicatable none p [1];      signal knot out flow [1];     restrictions      causality constraint one_out p;    end;    icon bg     figures      text '1' 296 424 color 0 18 bold;    end;    implementation eqequations	sum (direct (p.e)) = 0;	equal (collect (p.f));	flow = first (p.f);    implementation_end;   QSensor4 296 552    knot q_     ports      power knot in p1 [1];      power knot out p2 [1];      signal knot out q_rad [1];     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse     figures      ellipse 289.5 546 302.5 559 color 0 fill 16777215;      text 'q' 295.5 550 color 0;    end;    implementation eqparameters//	integer global nCyl;//	integer global iCyl;	integer global nStroke;//	real global pfi0[nCyl];	real global phi0;variables	real q0;	real b;	real q_gr;initialequations	q0 	= phi0*pi/180.0;	b 		= nStroke*180.0;	equations	p2.f 	= p1.f;	p1.e 	= p2.e;	q_rad 	= int (p1.f, q0);	q_gr	= q_rad*180.0/pi;     implementation_end;   Splitter1 360 552    description '<Description><Version>4.0</Version>   <LibraryPath>Signal\Block Diagram\Splitter.emx</LibraryPath>  <TimeStamp>2008-01-17 11:28:29</TimeStamp><IsMainModel>1</IsMainModel> <KeepParameterValues>False</KeepParameterValues></Description>';    knot Splitter     ports      signal knot duplicatable out output [1];      signal knot in input [1];    end;    icon bg ellipse     figures      ellipse 356.8 548.8 363.2 555.2 color -1 fill 0;      ellipse 355.7 547.7 364.3 556.3 color -1;     terminals      input 360 552 fixed;    end;    implementation eqequations    collect (output) = input;implementation_end;   TF2 296 472    type TF     ports      power in p1;      power out p2;     restrictions      causality constraint not_equal p1 p2;    end;    icon bg     figures      text 'TF' 296 472 color 0 18 bold;    end;    implementation eqparameters	real global B;variables	real r;initialequations	r=1/(pi*B^2/4.0);equations						p1.e = r * p2.e;	p2.f = r * p1.f;       implementation_end;  end;  connections   FlowSensor2\flow -> flow;   FlowSensor2\p2 => p2;   MTF2\p2 => QSensor4\p1;   OneJunction3\p <= p1;   OneJunction3\p => MSe\p;   OneJunction3\p => TF2\p1;   p_scvg -> MSe\p_scvg;   QSensor4\p2 => FlowSensor2\p1;   QSensor4\q_rad -> Splitter1\input;   Splitter1\output -> MTF2\pfi 360 512;   Splitter1\output -> q_rad;   TF2\p2 => MTF2\p1;  end; implementation_end;specification_end;	specification 'LagrangianIC' description '<Information>
 <Description>
    <Version>4.6</Version>
<IsMainModel>1</IsMainModel>
  <KeepParameterValues>False</KeepParameterValues>
  <AllowLibraryUpdate>True</AllowLibraryUpdate>
  <Configuration>
   <struct>
    <member>
     <name>DocumentationMask</name>
     <value>
      <struct></struct>
     </value>
    </member>
   </struct>
  </Configuration>
    <LibraryPath>Mechanics\CrankMechanism.emx</LibraryPath>
  <TimeStamp>2016-4-30 23:10:27</TimeStamp>
</Description>
</Information>'; type CrankMechanism  ports   power in p1;   signal out q_rad;   power out p2;   signal out flow;   signal in p_scvg; end; icon bg bottom shadow 11776947  figures   ellipse 611 980 635 1004 color 0 width 3;   line 624 992 594 966 624 912 color 0 width 3;   ellipse 582 954 606 978 color 0 width 3;   ellipse 615 904 631 920 color 0 width 3;   line 598 920 598 888 646 888 646 920 color 0 width 3;  terminals   p1 624 880 fixed;   q_rad 664 920 fixed;   p2 624 1008 fixed;   flow 663 872 fixed; end; implementation bg  submodels   cyl_8 296 512    description '<Information><Description><Version>4.2</Version><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues><LibraryPath>Bond Graph\IC.emx</LibraryPath><TimeStamp>2011-11-29 16:01:19</TimeStamp><AllowLibraryUpdate>True</AllowLibraryUpdate><Configuration><struct><member><name>DocumentationMask</name><value><struct></struct></value></member></struct></Configuration></Description></Information>';    type IC     ports      power in pI1;      power out pC1;      power in piston;      signal out phi;     restrictions      causality fixed out pC1;      causality fixed in pI1;      causality fixed in piston;    end;    icon bg left     figures      text 'IC' 296 512 color 0 18 bold;    end;    implementation eqparameters	real global phi0;		// initial angle 	real global omega0;		// initial angular velocity	real global m1;		// mass of crankshaft 10000kg	real global m2;			// mass of connection rod 1600kg	real global m3;			// mass of piston with rod and crosshead  650 + 700 + 1000 = 2350kg	real global J_crank;		// crankshaft moment of inertia (see Solidworks file crank)	real global J_rod;	// connection rod moment of inertia ( see Solidworks file connection rod)		real global rm1;		// crankshaft center of gravity from journal  	real global rm2;		// connection rod center of gravity from crosshead	real global S;			// Stroke	real global lambdaR;			// Ratio of the length of the crank arm to the connecting rodvariables	real r;			// distance between main journal and crankpin journal = Stroke / 2	real l;			// length of connecting rod	real dphi;	real M;	real p,q;	real a;	real p0;initialequations	a = phi0*pi/30;		r = S / 2;	l = r / lambdaR;	phi = a;	M = m1 * (0.2e1 * cos(phi) ^ 2 * rm1 ^ 2 + 0.2e1 * sin(phi) ^ 2 * rm1 ^ 2) / 0.2e1 + m2 * (0.2e1 * (r * cos(phi) - lambdaR * (l - rm2) * cos(phi)) ^ 2 + 0.2e1 * (-sin(phi) * r - (l - rm2) * (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR ^ 2 * sin(phi) * cos(phi)) ^ 2) / 0.2e1 + m3 * r ^ 2 * (-sin(phi) - (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR * sin(phi) * cos(phi)) ^ 2 + m1 * rm1 ^ 2 + J_crank + (m2 * rm2 ^ 2 + J_rod) * lambdaR ^ 2 * cos(phi) ^ 2 / (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2);	p0 = M*omega0;equations		p = int (pI1.e,p0);	q = int (pC1.f,a);		phi = q;	M = m1 * (0.2e1 * cos(phi) ^ 2 * rm1 ^ 2 + 0.2e1 * sin(phi) ^ 2 * rm1 ^ 2) / 0.2e1 + m2 * (0.2e1 * (r * cos(phi) - lambdaR * (l - rm2) * cos(phi)) ^ 2 + 0.2e1 * (-sin(phi) * r - (l - rm2) * (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR ^ 2 * sin(phi) * cos(phi)) ^ 2) / 0.2e1 + m3 * r ^ 2 * (-sin(phi) - (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR * sin(phi) * cos(phi)) ^ 2 + m1 * rm1 ^ 2 + J_crank + (m2 * rm2 ^ 2 + J_rod) * lambdaR ^ 2 * cos(phi) ^ 2 / (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2);		dphi = p / M;	pI1.f = dphi;		pC1.e = m2 * (0.2e1 * dphi ^ 2 * (r * cos(phi) - lambdaR * (l - rm2) * cos(phi)) * (-sin(phi) * r + lambdaR * (l - rm2) * sin(phi)) + 0.2e1 * dphi ^ 2 * (-sin(phi) * r - (l - rm2) * (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR ^ 2 * sin(phi) * cos(phi)) * (-r * cos(phi) - (l - rm2) * (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.3e1 / 0.2e1) * lambdaR ^ 4 * sin(phi) ^ 2 * cos(phi) ^ 2 - (l - rm2) * (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR ^ 2 * cos(phi) ^ 2 + (l - rm2) * (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR ^ 2 * sin(phi) ^ 2)) / 0.2e1 + m3 * dphi ^ 2 * r ^ 2 * (-sin(phi) - (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR * sin(phi) * cos(phi)) * (-cos(phi) - (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.3e1 / 0.2e1) * lambdaR ^ 3 * sin(phi) ^ 2 * cos(phi) ^ 2 - (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR * cos(phi) ^ 2 + (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR * sin(phi) ^ 2) - (m2 * rm2 ^ 2 + J_rod) * dphi ^ 2 * lambdaR ^ 2 * cos(phi) / (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) * sin(phi) + (m2 * rm2 ^ 2 + J_rod) * dphi ^ 2 * lambdaR ^ 4 * cos(phi) ^ 3 / (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ 2 * sin(phi) + g_n * m1 * sin(phi) * rm1 - g_n * m2 * (-sin(phi) * r - (l - rm2) * (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR ^ 2 * sin(phi) * cos(phi)) - g_n * m3 * r * (-sin(phi) - (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR * sin(phi) * cos(phi)) - piston.e * r * (-sin(phi) - (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR * sin(phi) * cos(phi));	piston.f = dphi * r * (-sin(phi) - (0.1e1 - lambdaR ^ 2 * sin(phi) ^ 2) ^ (-0.1e1 / 0.2e1) * lambdaR * sin(phi) * cos(phi));implementation_end;   C_cyl8 256 568    description '<Information><Description><Version>4.2</Version><IsMainModel>1</IsMainModel><KeepParameterValues>False</KeepParameterValues><LibraryPath>Bond Graph\PowerSensor.emx</LibraryPath><TimeStamp>2011-11-29 16:29:42</TimeStamp><AllowLibraryUpdate>True</AllowLibraryUpdate><Configuration><struct><member><name>DocumentationMask</name><value><struct></struct></value></member></struct></Configuration></Description></Information>';    knot PowerSensor     ports      power knot in p1 [1];      power knot out p2 [1];      signal knot out P [1] {W} ;     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse left     figures      ellipse 249.1 560.8 262.9 575.2 color 0 fill 16777215;      text 'P' 256.5 567.8 color 0;    end;    implementation eqequations	p2.e = p1.e;	p1.f = p2.f;	P = p1.e .* p1.f;implementation_end;   FlowSensor2 296 664    knot FlowSensor     ports      power knot in p1 [1];      power knot out p2 [1];      signal knot out flow [1];     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse     figures      ellipse 289.5 657.5 302.5 670.5 color 0 fill 16777215;      text 'f' 296.5 662.5 color 0;    end;    implementation eqequations	p2.f = p1.f;	p1.e = p2.e;	flow = p1.f;      implementation_end;   MSe 216 424    description '<Information> <Description>    <Version>4.2</Version><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <LibraryPath>Bond Graph\MSe.emx</LibraryPath>  <TimeStamp>2011-11-29 16:12:33</TimeStamp></Description></Information>';    type MSe     ports      power in p;      signal in p_scvg;     restrictions      causality fixed out p;    end;    icon bg bottom     figures      text 'MSe' 216 424 color 0 18 bold;    end;    implementation eqvariables	real flow;equations	p.e = p_scvg;	flow = p.f;implementation_end;   plug q_rad 432 512;   plug p2 295.9 712.1;   plug flow 432 664;   plug p_scvg 88 423.9;   plug p1 295.9 312;   OneJunction15 296 616    description '<Information> <Description>    <Version>4.2</Version><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <LibraryPath>Bond Graph\OneJunction.emx</LibraryPath>  <TimeStamp>2011-11-29 16:17:51</TimeStamp></Description></Information>';    knot OneJunction     ports      power knot duplicatable none p [1];      signal knot out flow [1];     restrictions      causality constraint one_out p;    end;    icon bg     figures      text '1' 296 616 color 0 18 bold;    end;    implementation eqequations	sum (direct (p.e)) = 0;	equal (collect (p.f));	flow = first (p.f);implementation_end;   OneJunction3 296 424    knot OneJunction     ports      power knot duplicatable none p [1];      signal knot out flow [1];     restrictions      causality constraint one_out p;    end;    icon bg     figures      text '1' 296 424 color 0 18 bold;    end;    implementation eqequations	sum (direct (p.e)) = 0;	equal (collect (p.f));	flow = first (p.f);    implementation_end;   PowerSensor2 296 568    description '<Information> <Description>    <Version>4.2</Version><IsMainModel>1</IsMainModel>  <KeepParameterValues>False</KeepParameterValues>    <LibraryPath>Bond Graph\PowerSensor.emx</LibraryPath>  <TimeStamp>2011-11-29 16:29:42</TimeStamp></Description></Information>';    knot PowerSensor     ports      power knot in p1 [1];      power knot out p2 [1];      signal knot out P [1] {W} ;     restrictions      causality constraint not_equal p1 p2;    end;    icon bg ellipse     figures      ellipse 289.1 560.8 302.9 575.2 color 0 fill 16777215;      text 'P' 296.5 567.8 color 0;    end;    implementation eqequations	p2.e = p1.e;	p1.f = p2.f;	P = p1.e .* p1.f;implementation_end;   TF2 296 472    type TF     ports      power in p1;      power out p2;     restrictions      causality constraint not_equal p1 p2;    end;    icon bg     figures      text 'TF' 296 472 color 0 18 bold;    end;    implementation eqparameters	real global B;variables	real r;initialequations	r=1/(pi*B^2/4.0);equations						p1.e = r * p2.e;	p2.f = r * p1.f;       implementation_end;  end;  connections   C_cyl8\p2 => OneJunction15\p 256 592;   cyl_8\pC1 => C_cyl8\p1 254.5 541.6;   cyl_8\phi -> q_rad;   cyl_8\pI1 <= PowerSensor2\p2;   FlowSensor2\flow -> flow;   FlowSensor2\p2 => p2;   OneJunction15\p => FlowSensor2\p1;   OneJunction3\p <= p1;   OneJunction3\p => MSe\p;   OneJunction3\p => TF2\p1;   p_scvg -> MSe\p_scvg;   PowerSensor2\p1 <= OneJunction15\p;   TF2\p2 => cyl_8\piston;  end; implementation_end;specification_end;end;]]>
  </Sidops>
</Model>
</Document>
