<?xml version="1.0" encoding="UTF-8"?>
<Document>
 <Icons>
    <Icon size="128" bpp="32" format="png">
<![CDATA[89504e470d0a1a0a0000000d4948445200000080000000800806000000c33e61cb00000006624b474400ff00ff00ffa0bda793000000097048597300000ec400000ec401952b0e1b000004a349444154789ceddd3148235900c6f12f870836ab2881602111828dc549ba305d0888dd13c42a70369242901442da879d98426c037242b09e4a51065784212944d25808837056422aab5c972b24436292bddbbd1813bfefd7cd733233ebfbe7ed44628c349b4d08afdf3efb02e4732900720a809c0220a700c82900720a809c0220a700c82900720a809c0220a700c82900720a809c0220a700c82900720a809c0220a700c82900720a809c0220a700c82900720a809c0220a700c82900720a809c0220a700c82900720a80dcc4fb814824f23b00f309d722c371d46c365f5b1b91f71f12158944fe00f0e7902f4a8627de6c36ff6a6d74ad002d878787585c5c1cce25c987bbbdbdc5f1f171d778df00e6e6e6108bc53ef4a264786666667a8eeb26909c0220a700c82900720a809c0220a700c82900720a809c0220a700c82900720a809c0220a700c82900720a809c0220d7f72d61a3a2582c0200f2f93c6e6e6e50abd5c2afa5d3692493c98efd5f5e5e50ad56110441c778af7d5bc7dedbdb83effba8542a0080542a05c77100009ee785e75c5959412693e9bac62008e0fb3eeaf53a00201a8dc2711c2412895ffe770fcbd8ac00474747b0d686dbaeeb62777717f7f7f7e198e779d8d8d80827f6fdbebeeff73cb6e779e1e4bbae8b42a1802008707a7a1a4ebeebbab0d6c2f3bcaec76e6d6da1542a8563a552095b5b5b5dfb8ea2915f0180b76fbe310667676758585800f0f66cb4d6e2fafa3a7c66d76a351863b0b6b686e5e5e5f0f1a9540a854201954a257c66b71f3b1a8d62676707535353585b5b432e97eb3b5eabd5c255e0f9f919d65a6c6f6f637575357c136d369bc5e5e525acb588c7e323bd128c450000b0b9b9194e3e00388e03633a7f7f656f6fafe7637beddb6e7575155353530080e5e5651863e0ba2ececfcfbbc6dbdddfdfc31883f5f5757cfbf62d1c8fc562585f5f47bd5e87effb0ae0ff32c6744c3e8070627a69341a787a7ac2dddd1d00a05eaf87ab48af63f77afbbb31a663527b098200aeebf6fd7abf738e92b108e067b46edada27e6b32661d4271ff86201789e076b2d8c31b0d662767616f3f3f3989e9efeb0731a6390cfe73131319edfcab17915f05fb46e02f3f93c32990c92c92462b1185e5f5f7fb854ffaa68340ad775f1f8f838f0630fcb970a0040d78404418072b9fc21e76abda2b8b8b8c0c3c34338de6834e0fb3e8ac5e287843748e3b96ef5914aa5e0ba2e72b95cf8ff6ffb04b8ae8b6c363bb0df794c2412b0d6c25adb75c3d7da4ea7d30339d747f95201388e83838383f0873ac0db4bc3643289c9c94994cb6554abd581de9c653219c4e3f18e9f040280b5168ee3fcf0d5ca28e8fbf900272727585a5afa9cab9281bbbabac2fefe3ef0eef301bedc3d80fc1c05404e01905300e414003905404e01905300e414003905404e01905300e414003905404e01905300e414003905404e01905300e4140039fdd5303efffa57c35e007c1fdef5c890fdddbed1b5020817dd03905300e414003905404e01905300e414003905404e01905300e414003905404e01905300e414003905404e01905300e414003905404e01905300e414003905404e01905300e414003905404e01905300e414003905404e01905300e4fe01ed4152ce2b8cf8ba0000000049454e44ae426082]]>
   </Icon>
</Icons>
 <Model version="4.5" build="4.4.1.4356">
    <Sidops>
<![CDATA[ROHR1 334.6 312.5 description '<Information>
 <Description>
    <LibraryPath>Combustion\CombFixedROHR.emx</LibraryPath>
  <TimeStamp>2015-6-22 23:47:51</TimeStamp>
  <Version>4.5</Version>
</Description>
</Information>'; type Submodel  ports   power out pTF [3,1];   signal in x_lev; "Controller Input (Throttle)"   signal in omega; "Engine speed (rad/s)"   signal integer out Comb_state; "0: Start of new cycle / 1 : injection started / 2 : start of combustion / 5: end of combustion"   signal out p_max [2,1];   signal in pfi;   signal in fiinj;  restrictions   causality fixed in pTF; end; icon bg bottom  figures   rectangle 301.2 297 368 328 fill 12895428;   text 'name' 336 312 16;  terminals   pTF 336 336 fixed;   x_lev 313 288 fixed;   omega 360 288 fixed;   Comb_state 360 336 fixed;   p_max 336 312 fixed;   pfi 328 288 fixed;   fiinj 344 288 fixed; end; implementation eqparameters	integer global ncyl;	real global nstroke;	real global hn;//	real global fiinj;	real global mqf_max;	real global pemax;	real global ommax;	real global T_L;	real global T_H;	real global fs;	real global slag, Diam, alam, Veps;	integer global CASE;//Fuel composition [C H O N]	real global FC[4];// Englib	string global dll_ICE;//	string dll_fcn_rohr    = 'ice_rohr';	string dll_icemax    = 'ice_pfimax';	string hidden dll_fcn_ThDP = 'thdyn_CombGasZach'; // subroutines names in the dll file//	string dll_fcn_rohr = 		'ice_rohr2';	real wiebe_para[9] = [0.07;0.57;3.05;11;24;56.3;1.5;1;0.7];variables	real phi;	real phi_comb;	real P, F, T, V_cyl, m_cyl0, Vc;	real dmf;	real mqf_des, mqf, mqf_min;//	real inarr_ROHR[20], outarr_ROHR[13];	real fiig;	real hidden inarr_pfimax[3], outarr_pfimax[2];	real hidden inarr_ThermoProp[3], outarr_ThermoProp[13];	real Pmax, Pmax_pfi;//	real bmepnom, omeganom;//	real eta_i, sfoc;//	real mfPC, mf, Oldmf, OldmfPC;	boolean reset;		real dphi_comb, igdel, dmf_nom;	real yp, ym, yl, yptomp, ymtomm, yltoml, df1dy, df2dy, df3dy;	initialequations	Comb_state = 0;	// 0: Start of new cycle / 1 : injection started / 2 : start of combustion / 5: end of combustion//	if fiinj > 180 then fiinj = fiinj - 360; end;		fiig = 0;	reset = true;	mqf = 0;	dmf = 0;	Vc	= pi*Diam^2/4.0*slag/(Veps-1);	dphi_comb = wiebe_para[3] + wiebe_para[6];code	P=pTF.e[1]; T=pTF.e[2]; F=pTF.e[3];	phi = pfi*180/pi mod 360;// Deternmine the mass of fuel per cycle not exceeding the stoichiometric ratio	if phi > 180 then 		phi_comb= phi - 360;  	else		phi_comb = phi;	end;	if phi_comb > fiinj and Comb_state == 0 then		Comb_state = 1;		mqf_des = mqf_max * x_lev;		inarr_ThermoProp = [P;T;F];		outarr_ThermoProp = dll(dll_ICE,dll_fcn_ThDP, inarr_ThermoProp);			V_cyl = pi*Diam^2*slag^2/8*alam*(alam + 1 - (alam*cos(pfi) + sqrt(1 - (alam*sin(pfi))^2))) + Vc;		m_cyl0 = P*V_cyl/outarr_ThermoProp[1]/T;			mqf_min = m_cyl0*fs;			mqf = min([mqf_des;m_cyl0*fs]);		igdel = 180/pi*omega*180/pi*0.00020*exp(4650/T)*(P*1e-5)^(-1.19);		if igdel > 30 then			Comb_state = 5;		end;		fiig = fiinj + igdel;		reset = false;			else if phi_comb > fiig and phi_comb < fiig + dphi_comb and Comb_state == 1 then				Comb_state = 2;				reset = true;			else	if phi_comb > fiig + dphi_comb and reset == true then						Comb_state = 5;						reset = false;					end;			end;	end;				if phi_comb > -20 and phi_comb < -15 then		Comb_state = 0;		reset = true;	end;				switch Comb_state		case 2 do			yp = max([(phi_comb - fiig) / wiebe_para[4];0]);			ym = max([0;(phi_comb - (fiig + wiebe_para[3]))/wiebe_para[5]]);			yl = max([0;(phi_comb - (fiig + wiebe_para[3]))/wiebe_para[6]]);			yptomp = yp^wiebe_para[7];			ymtomm = ym^wiebe_para[8];			yltoml = yl^wiebe_para[9];			df1dy = 6.9*(wiebe_para[7] + 1)*yptomp*exp(-6.9*yp*yptomp) / wiebe_para[4];			df2dy = 6.9*(wiebe_para[8] + 1)*ymtomm*exp(-6.9*ym*ymtomm) / wiebe_para[5];			df3dy = 6.9*(wiebe_para[9] + 1)*yltoml*exp(-6.9*yl*yltoml) / wiebe_para[6];			dmf_nom = wiebe_para[1]*df1dy + wiebe_para[2]*df2dy + (1-wiebe_para[1] - wiebe_para[2])*df3dy;			dmf = mqf*dmf_nom*omega*180/pi;		default do			dmf = 0;	end;	// Calculate normalized BMEP and omega (0~1)//	bmepnom = max([0.5;0/pemax]);//	bmepnom = min([1;bmepnom]);//	omeganom = max([0.61;omega/ommax]);//	omeganom = min([1;omeganom]);// Calculate the rate of heat release//	inarr_ROHR[1:11]=[nstroke; fiinj; pfi; P; T; omega; mqf ; hn; bmepnom; Comb_state; fiig];//	inarr_ROHR[12:20] = WiebePara;//	outarr_ROHR=dll(dll_ICE,dll_fcn_rohr, inarr_ROHR);//	if Comb_state == 1 //	dmf = outarr_ROHR[1];//	dqf = outarr_ROHR[2];//	Comb_state = outarr_ROHR[3];//	fiig = outarr_ROHR[4];//	WiebePara = outarr_ROHR[5:13];//	if dmf>0 and dmf<1e-4 then//		dmf = 0;//	end;	pTF.f[1]=dmf;	pTF.f[2]= dmf*hn;	pTF.f[3]=dmf;	//	if Comb_state == 5 then//		reset = true;//	end;	// Get Pmax for cycle 		inarr_pfimax=[time; phi; P];	outarr_pfimax=dll(dll_ICE,dll_icemax, inarr_pfimax);	Pmax=outarr_pfimax[1];Pmax_pfi=outarr_pfimax[2];	p_max = [Pmax;Pmax_pfi];implementation_end;]]>
  </Sidops>
</Model>
</Document>
